var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccountService.html",[0,1.104,1,1.855]],["body/injectables/AccountService.html",[0,1.082,1,1.818,2,1.176,3,0.161,4,0.161,5,0.137,6,1.468,7,0.161,8,0.663,9,3.808,10,4.634,11,2.468,12,4.286,13,3.808,14,3.185,15,4.286,16,3.185,17,0.429,18,1.685,19,2.501,20,2.269,21,2.269,22,1.029,23,2.014,24,1.166,25,0.032,26,0.548,27,0.648,28,0.904,29,2.605,30,3.115,31,1.266,32,3.577,33,2.014,34,4.166,35,4.899,36,3.754,37,4.845,38,3.381,39,4.845,40,2.605,41,5.108,42,4.634,43,2.202,44,3.115,45,1.087,46,3.754,47,2.014,48,2.206,49,0.026,50,3.845,51,2.014,52,2.468,53,2.872,54,2.269,55,4.286,56,1.127,57,3.376,58,3.42,59,2.605,60,2.605,61,3.115,62,2.244,63,3.115,64,3.115,65,3.115,66,3.115,67,1.818,68,2.269,69,3.115,70,2.014,71,3.946,72,3.115,73,4.628,74,4.628,75,4.628,76,2.014,77,3.175,78,2.014,79,3.115,80,2.018,81,3.115,82,3.115,83,2.014,84,0.427,85,0.161,86,2.269,87,1.068,88,1.068,89,1.305,90,0.758,91,2.014,92,1.685,93,1.173,94,1.468,95,1.685,96,1.685,97,1.176,98,1.685,99,3.003,100,1.468,101,0.823,102,1.068,103,1.468,104,1.305,105,1.176,106,0.161,107,0.114,108,0.976,109,2.014,110,1.305,111,0.646,112,0.851,113,4.899,114,3.808,115,2.014,116,2.014,117,2.014,118,2.605,119,2.605,120,2.014,121,5.108,122,2.014,123,2.014,124,2.014,125,0.823,126,2.014,127,2.018,128,2.014,129,2.014,130,2.014,131,2.014,132,2.014,133,2.014,134,1.509,135,1.305,136,1.068,137,2.014,138,0.55,139,1.685,140,3.115,141,3.185,142,2.014,143,2.014,144,1.685,145,2.014,146,2.014,147,0.015,148,0.01]],["title/components/AddNotebookComponent.html",[149,0.046,150,0.566]],["body/components/AddNotebookComponent.html",[3,0.244,4,0.244,5,0.208,7,0.244,8,0.901,17,0.651,22,1.072,24,0.77,25,0.031,26,0.574,27,0.642,28,0.596,31,1.021,45,0.901,49,0.015,52,1.982,56,1.725,84,0.39,85,0.244,106,0.338,107,0.173,108,1.481,112,1.325,138,0.835,147,0.02,148,0.015,149,0.07,150,0.933,151,1.065,152,0.905,153,0.905,154,0.905,155,0.77,156,4.142,157,2.526,158,2.228,159,0.98,160,1.124,161,0.905,162,1.356,163,1.242,164,1.397,165,0.901,166,4.058,167,0.901,168,3.539,169,1.065,170,3.209,171,2.323,172,1.971,173,1.114,174,3.393,175,1.982,176,2.662,177,2.914,178,3.058,179,3.058,180,1.021,181,3.058,182,2.228,183,2.742,184,3.058,185,3.058,186,1.621,187,0.905,188,1.785,189,0.835,190,3.562,191,3.209,192,1.909,193,1.763,194,1.481,195,1.982,196,1.982,197,2.742,198,4.232,199,1.359,200,1.785,201,1.25,202,1.785,203,1.481,204,1.785,205,2.049,206,1.785,207,3.083,208,2.742,209,2.558,210,0.77,211,1.252,212,1.252,213,0.905,214,1.55,215,0.905,216,1.252,217,0.651,218,0.905,219,0.651,220,0.905,221,0.905,222,0.496,223,0.835,224,0.905,225,0.545,226,0.77,227,1.252,228,0.596,229,1.252,230,0.651,231,1.252,232,0.905,233,0.651,234,0.905,235,0.596,236,0.905,237,0.651,238,0.545,239,0.77,240,0.596,241,0.905,242,0.596,243,0.905,244,0.651,245,0.905,246,0.77,247,0.77,248,0.905,249,0.905]],["title/components/AppComponent.html",[149,0.046,217,0.676]],["body/components/AppComponent.html",[3,0.275,4,0.275,5,0.234,7,0.275,8,0.977,17,0.733,22,1.117,24,0.867,25,0.032,26,0.611,27,0.682,28,0.672,31,0.672,45,0.733,49,0.016,84,0.528,85,0.275,105,2.678,106,0.275,107,0.195,111,1.105,125,1.875,138,0.941,147,0.022,148,0.016,149,0.075,150,0.614,151,1.155,152,1.02,153,1.02,154,1.02,155,0.867,161,1.02,162,1.376,163,1.261,164,0.798,165,0.977,167,0.977,169,1.155,173,1.171,180,0.672,190,3.343,210,0.867,211,1.358,212,1.358,213,1.02,214,1.628,215,1.02,216,1.358,217,1.171,218,1.02,219,0.733,220,1.02,221,1.02,222,0.559,223,0.941,224,1.02,225,0.614,226,0.867,227,1.358,228,0.672,229,1.358,230,0.733,231,1.358,232,1.02,233,0.733,234,1.02,235,0.672,236,1.02,237,0.733,238,0.614,239,0.867,240,0.672,241,1.02,242,0.672,243,1.02,244,0.733,245,1.527,246,0.867,247,0.867,248,1.02,249,1.02,250,2.882,251,5.159,252,4.589,253,3.758,254,3.343,255,3.446,256,3.123,257,4.589,258,3.446,259,2.038,260,2.038,261,3.446,262,3.343,263,3.446,264,2.882,265,2.735,266,3.446,267,2.011,268,2.51,269,2.882,270,3.446,271,3.446,272,3.446,273,3.446]],["title/modules/AppModule.html",[274,1.685,275,2.059]],["body/modules/AppModule.html",[3,0.215,4,0.215,5,0.183,25,0.032,49,0.013,80,1.747,84,0.604,85,0.215,87,1.429,106,0.215,107,0.152,147,0.018,148,0.013,150,0.972,151,0.679,157,1.72,163,0.526,176,1.306,187,0.798,210,0.679,217,1.294,219,1.162,222,0.885,225,1.002,228,1.065,230,1.162,233,1.162,235,1.065,237,1.162,238,1.044,240,1.065,242,1.065,244,1.162,246,0.975,256,2.894,264,2.255,265,1.429,267,1.574,268,1.964,274,1.429,275,4.287,276,2.053,277,1.747,278,3.789,279,3.607,280,3.789,281,1.747,282,2.255,283,2.255,284,2.255,285,2.255,286,2.255,287,3.186,288,3.186,289,3.238,290,2.255,291,2.696,292,2.821,293,2.821,294,3.238,295,2.821,296,1.747,297,2.696,298,2.696,299,3.872,300,2.696,301,2.696,302,2.821,303,2.255,304,3.872,305,3.872,306,1.747,307,3.872,308,2.255,309,3.872,310,2.696,311,3.872,312,2.696,313,3.872,314,2.696,315,2.696,316,2.255,317,3.872,318,2.696,319,3.872,320,2.696,321,2.255,322,2.696,323,2.696,324,1.574,325,2.936,326,2.255,327,2.696,328,1.964,329,2.696,330,1.429,331,2.255,332,2.255,333,2.255,334,1.747,335,3.238,336,2.255,337,1.747,338,3.872,339,1.964,340,2.696,341,1.964,342,2.696,343,3.872,344,1.574,345,2.696,346,1.964,347,2.696,348,1.747,349,1.306,350,1.747,351,2.696,352,2.696,353,2.255]],["title/modules/AppRoutingModule.html",[274,1.685,287,1.855]],["body/modules/AppRoutingModule.html",[3,0.334,4,0.334,5,0.284,25,0.032,49,0.02,56,1.238,58,2.71,77,2.71,84,0.586,85,0.334,90,1.575,93,1.575,106,0.334,107,0.236,141,3.498,147,0.025,148,0.02,149,0.09,150,0.926,157,2.309,164,0.969,228,1.014,235,1.103,237,1.106,240,1.014,242,0.816,276,2.217,281,2.71,287,3.034,292,3.047,293,3.787,326,3.498,331,3.498,332,3.498,333,3.498,334,2.71,335,4.347,336,3.498,337,2.71,344,2.441,354,4.182,355,4.182,356,5.198,357,3.665,358,6.203,359,4.182]],["title/components/ConfirmDeleteComponent.html",[149,0.046,219,0.676]],["body/components/ConfirmDeleteComponent.html",[3,0.273,4,0.273,5,0.232,7,0.273,8,0.971,17,0.727,22,1.069,24,0.859,25,0.031,26,0.608,27,0.452,28,0.666,40,4.914,45,1.093,49,0.016,56,1.35,84,0.42,85,0.273,106,0.273,107,0.193,111,1.095,138,0.932,147,0.022,148,0.016,149,0.074,150,0.608,151,1.148,152,1.01,153,1.01,154,1.01,155,0.859,159,1.057,160,1.19,161,1.01,162,1.374,163,1.259,164,0.791,165,0.971,167,0.971,172,1.717,173,1.166,175,2.212,176,2.654,180,1.146,187,1.01,197,3.807,210,0.859,211,1.35,212,1.35,213,1.01,214,1.622,215,1.01,216,1.35,217,0.727,218,1.01,219,1.166,220,1.895,221,1.01,222,0.553,223,0.932,224,1.01,225,0.608,226,0.859,227,1.35,228,0.666,229,1.35,230,0.727,231,1.35,232,1.01,233,0.727,234,1.01,235,0.666,236,1.01,237,0.727,238,0.608,239,0.859,240,0.666,241,1.01,242,0.666,243,1.01,244,0.727,245,1.01,246,0.859,247,0.859,248,1.01,249,1.01,346,4.161,360,4.776,361,2.855,362,5.135,363,4.561,364,3.414,365,3.414,366,3.414,367,3.414,368,2.855,369,2.855,370,3.814,371,3.322]],["title/interfaces/DialogData.html",[177,1.685,189,0.868]],["body/interfaces/DialogData.html",[3,0.323,4,0.323,5,0.275,7,0.323,25,0.032,27,0.797,31,1.265,49,0.019,56,1.649,84,0.469,85,0.323,106,0.407,107,0.229,108,1.959,112,1.597,147,0.024,148,0.019,149,0.074,150,0.721,156,2.947,157,1.797,158,2.947,159,0.937,160,1.18,162,0.861,163,0.789,164,1.396,165,0.861,166,3.384,167,0.861,168,3.384,169,1.281,170,2.361,171,2.276,172,1.523,173,0.861,174,2.622,176,2.466,177,2.954,180,0.993,183,2.622,186,2.145,187,1.197,188,2.972,189,1.105,190,3.789,191,3.413,192,2.093,193,1.875,194,2.698,195,2.622,196,2.622,372,2.145]],["title/interfaces/DirectoryNode.html",[189,0.868,373,1.855]],["body/interfaces/DirectoryNode.html",[3,0.362,4,0.216,5,0.184,7,0.216,20,2.015,21,2.015,25,0.032,26,0.694,27,0.6,28,0.756,31,1.214,43,1.722,48,1.018,49,0.013,53,1.433,56,1.148,62,1.309,67,2.648,84,0.566,85,0.31,90,1.018,93,1.018,101,1.853,106,0.216,107,0.153,110,2.513,111,0.867,112,1.433,127,1.751,134,1.878,135,2.513,136,2.056,147,0.018,148,0.013,149,0.056,155,1.248,159,0.626,160,0.899,162,0.575,163,0.527,165,0.575,167,0.575,169,0.976,171,1.585,172,1.018,173,0.575,180,0.527,187,0.8,189,1.059,192,0.939,193,1.244,194,1.878,199,1.723,201,1.585,222,0.438,225,0.481,226,1.142,238,0.691,239,0.68,247,0.976,254,1.751,260,1.723,324,1.577,325,1.751,330,1.433,348,1.751,349,1.309,350,1.751,372,1.433,373,3.189,374,1.751,375,1.433,376,2.826,377,3.824,378,2.983,379,1.751,380,1.751,381,1.751,382,1.751,383,1.751,384,1.969,385,1.969,386,1.969,387,1.751,388,1.969,389,1.751,390,1.969,391,2.015,392,1.751,393,1.751,394,1.751,395,1.577,396,2.513,397,1.577,398,1.577,399,1.969,400,1.969,401,2.332,402,2.513,403,1.309,404,1.878,405,1.878,406,1.878,407,1.878,408,1.969,409,1.969,410,1.969,411,4.1,412,3.824,413,3.305,414,3.305,415,2.826,416,1.969,417,2.264,418,1.969,419,1.969,420,1.433,421,1.969,422,1.969,423,1.969,424,2.826,425,3.305,426,1.969,427,1.969,428,1.969,429,1.969,430,1.969,431,1.969,432,1.969,433,2.264,434,2.648,435,1.969,436,1.969,437,1.969,438,1.969,439,1.969,440,1.969,441,1.969,442,1.969,443,1.751,444,1.969,445,1.751,446,1.577,447,1.969,448,1.751,449,1.577,450,1.969,451,1.433,452,1.751,453,1.433,454,1.433,455,1.751,456,1.577,457,1.969,458,1.969,459,1.969,460,1.969,461,1.969,462,1.751,463,1.969,464,1.969,465,1.969,466,1.969,467,1.969,468,1.969,469,1.309,470,1.751,471,1.751,472,1.969,473,1.969,474,1.751,475,1.969,476,1.969,477,1.751,478,1.969,479,1.969,480,1.969,481,1.969,482,1.969]],["title/components/EditProfileComponent.html",[149,0.046,222,0.515]],["body/components/EditProfileComponent.html",[3,0.237,4,0.237,5,0.202,7,0.237,8,0.883,17,0.633,22,1.061,24,0.748,25,0.031,26,0.698,27,0.632,28,0.58,31,1.099,45,0.883,49,0.014,56,0.88,62,2.009,84,0.441,85,0.237,106,0.331,107,0.168,108,1.44,138,0.812,147,0.02,148,0.014,149,0.069,150,0.53,151,1.044,152,0.88,153,0.88,154,0.88,155,0.748,157,1.321,159,0.961,160,1.107,161,0.88,162,1.351,163,1.238,164,1.107,165,0.883,167,0.883,169,1.044,170,3.176,171,2.303,172,1.947,173,1.101,174,3.352,175,1.926,176,2.635,177,1.576,180,1.009,182,2.166,183,2.689,186,1.576,187,0.88,188,1.735,189,0.812,193,1.744,195,1.926,196,1.926,197,2.689,199,1.321,200,1.735,201,1.215,202,1.735,203,1.44,204,1.735,205,1.44,206,1.735,207,2.166,210,0.748,211,1.228,212,1.228,213,0.88,214,1.531,215,0.88,216,1.228,217,0.633,218,0.88,219,0.633,220,0.88,221,0.88,222,0.839,223,1.611,224,0.88,225,0.53,226,0.748,227,1.228,228,0.58,229,1.228,230,0.633,231,1.228,232,0.88,233,0.633,234,0.88,235,0.58,236,0.88,237,0.633,238,0.53,239,0.748,240,0.58,241,0.88,242,0.58,243,0.88,244,0.633,245,0.88,246,0.748,247,0.748,248,0.88,249,0.88,344,1.735,349,2.729,401,2.298,404,1.44,405,2.635,406,2.635,407,1.44,483,4.106,484,2.166,485,3.997,486,3.47,487,3.526,488,2.973,489,2.973,490,2.973,491,2.973,492,2.973,493,4.149,494,5.172,495,4.149,496,4.149,497,4.149,498,4.149,499,4.149,500,4.326,501,5.172,502,4.149]],["title/interfaces/EditProfileDialogData.html",[189,0.868,487,2.059]],["body/interfaces/EditProfileDialogData.html",[3,0.315,4,0.315,5,0.268,7,0.315,25,0.032,26,0.686,27,0.809,31,1.286,49,0.019,56,1.483,84,0.508,85,0.315,106,0.4,107,0.223,108,1.911,147,0.024,148,0.019,149,0.072,157,1.753,159,0.914,160,1.161,162,0.84,163,0.769,164,1.276,165,0.84,167,0.84,169,1.261,170,2.303,171,2.25,172,1.485,173,0.84,174,2.557,176,2.427,177,2.092,180,0.977,183,2.557,186,2.092,187,1.168,188,2.925,189,1.077,192,1.37,193,1.858,195,2.557,196,2.557,222,0.64,223,1.504,344,2.303,349,1.911,372,2.092,401,1.753,404,2.806,405,2.806,406,2.806,407,2.806,483,2.874,484,2.874,485,3.3,486,3.3,487,3.569]],["title/interfaces/ExampleFlatNode.html",[189,0.868,433,1.855]],["body/interfaces/ExampleFlatNode.html",[3,0.36,4,0.214,5,0.182,7,0.214,20,2.004,21,2.004,25,0.032,26,0.692,27,0.653,31,1.212,43,1.714,48,1.008,49,0.013,53,1.419,56,1.14,62,1.296,67,2.88,84,0.565,85,0.308,90,1.008,93,1.008,101,1.843,106,0.214,107,0.151,110,2.496,111,0.858,112,1.428,127,1.734,134,1.865,135,2.496,136,2.042,147,0.018,148,0.013,149,0.056,155,1.136,159,0.62,160,0.892,162,0.57,163,0.522,165,0.57,167,0.57,169,0.969,171,1.574,172,1.008,173,0.57,180,0.522,187,0.792,189,1.052,192,0.93,193,1.235,194,2.39,199,1.711,201,1.574,222,0.434,225,0.477,226,1.136,238,0.686,239,0.674,247,0.969,254,1.734,260,1.711,324,1.562,325,1.734,330,1.419,348,1.734,349,1.296,350,1.734,372,1.419,373,2.634,374,1.734,375,1.419,376,1.95,377,2.806,378,2.975,379,1.734,380,1.734,381,1.734,382,1.734,383,1.734,384,1.95,385,1.95,386,1.95,387,1.734,388,1.95,389,1.734,390,1.95,391,2.004,392,1.734,393,1.734,394,1.734,395,1.562,396,2.496,397,1.562,398,1.562,399,1.95,400,1.95,401,2.323,402,2.496,403,1.296,404,1.865,405,1.865,406,1.865,407,1.865,408,1.95,409,1.95,410,1.95,411,4.183,412,4.261,413,3.809,414,4.088,415,2.806,416,1.95,417,2.248,418,1.95,419,1.95,420,1.419,421,1.95,422,1.95,423,1.95,424,2.806,425,3.287,426,1.95,427,1.95,428,1.95,429,1.95,430,1.95,431,1.95,432,1.95,433,2.634,434,2.634,435,1.95,436,1.95,437,1.95,438,1.95,439,1.95,440,1.95,441,1.95,442,1.95,443,1.734,444,1.95,445,1.734,446,1.562,447,1.95,448,1.734,449,1.562,450,1.95,451,1.419,452,1.734,453,1.419,454,1.419,455,1.734,456,1.562,457,1.95,458,1.95,459,1.95,460,1.95,461,1.95,462,1.734,463,1.95,464,1.95,465,1.95,466,1.95,467,1.95,468,1.95,469,1.296,470,1.734,471,1.734,472,1.95,473,1.95,474,1.734,475,1.95,476,1.95,477,1.734,478,1.95,479,1.95,480,1.95,481,1.95,482,2.806]],["title/components/FolderPanelComponent.html",[149,0.046,225,0.566]],["body/components/FolderPanelComponent.html",[3,0.262,4,0.128,5,0.109,7,0.208,8,0.554,17,0.342,20,2.078,21,2.078,22,1.178,24,0.404,25,0.032,26,0.626,27,0.714,28,0.313,31,1.133,43,1.543,45,0.945,48,0.605,49,0.008,53,0.852,56,0.771,62,0.778,67,1.916,84,0.506,85,0.208,90,0.605,93,0.605,97,0.938,101,1.815,102,0.852,106,0.128,107,0.091,110,1.687,111,0.515,112,1.277,125,2.303,127,1.041,134,1.261,135,1.687,136,1.381,138,0.439,147,0.012,148,0.008,149,0.047,150,0.286,151,0.655,152,0.476,153,0.476,154,0.476,155,0.95,159,0.603,160,0.761,161,0.476,162,1.213,163,1.111,164,0.372,165,0.554,167,0.554,169,0.655,171,1.064,172,0.605,173,0.804,180,0.912,187,0.476,189,0.711,193,1.211,194,1.59,199,1.157,201,2.113,202,2.422,203,0.778,205,1.261,206,1.52,208,2.128,210,0.404,211,0.771,212,0.771,213,0.476,214,1.118,215,0.476,216,0.771,217,0.342,218,0.476,219,0.342,220,0.476,221,0.476,222,0.422,223,0.439,224,0.476,225,0.673,226,1.226,227,0.771,228,0.313,229,0.771,230,0.342,231,0.771,232,0.476,233,0.342,234,0.476,235,0.313,236,0.476,237,0.342,238,0.739,239,0.655,240,0.313,241,0.476,242,0.313,243,0.476,244,0.342,245,0.476,246,0.404,247,1.118,248,0.476,249,0.476,254,2.128,259,2.504,260,1.677,324,3.544,325,1.041,330,0.852,348,1.041,349,0.778,350,1.041,373,1.916,374,3.934,375,0.852,376,1.17,377,1.897,378,2.002,379,1.041,380,1.041,381,1.041,382,1.041,383,1.041,384,1.17,385,1.17,386,1.17,387,1.041,388,1.17,389,1.041,390,1.17,391,2.078,392,1.041,393,1.041,394,1.041,395,0.938,396,2.447,397,1.52,398,1.916,399,1.897,400,1.897,401,2.078,402,2.447,403,2.151,404,2.151,405,1.829,406,1.829,407,1.829,408,1.897,409,1.17,410,2.392,411,3.855,412,3.023,413,2.751,414,2.392,415,2.392,416,1.17,417,1.916,418,3.023,419,1.17,420,0.852,421,1.17,422,2.392,423,1.897,424,2.751,425,3.023,426,2.392,427,1.897,428,2.392,429,1.897,430,1.897,431,2.392,432,1.17,433,1.52,434,2.422,435,1.17,436,1.17,437,1.17,438,1.17,439,1.17,440,1.17,441,1.17,442,1.17,443,1.041,444,1.17,445,1.041,446,2.204,447,1.17,448,1.041,449,0.938,450,1.17,451,0.852,452,1.041,453,0.852,454,0.852,455,1.041,456,0.938,457,1.17,458,1.17,459,1.17,460,1.17,461,1.17,462,1.041,463,1.17,464,1.17,465,1.17,466,1.17,467,1.17,468,1.17,469,0.778,470,1.041,471,1.041,472,1.17,473,1.17,474,1.041,475,1.17,476,1.17,477,1.041,478,1.17,479,1.17,480,1.17,481,1.17,482,1.17,503,2.392,504,3.283,505,3.283,506,3.283,507,1.607,508,2.178,509,1.607,510,1.607,511,1.607,512,1.607,513,1.607,514,1.607,515,1.607,516,1.607,517,1.607,518,1.607,519,1.344,520,1.344,521,1.344,522,1.344,523,1.607,524,1.607,525,1.607,526,1.607,527,1.607,528,1.344,529,1.607,530,1.607,531,1.897,532,2.604,533,2.604,534,2.604,535,1.897,536,1.897,537,1.17,538,2.751,539,1.897,540,2.392,541,1.897,542,1.897,543,2.392,544,2.392,545,2.392,546,1.17,547,1.041,548,2.392,549,2.751,550,1.17,551,1.344,552,2.392,553,1.897,554,1.897,555,2.392,556,1.897,557,1.897,558,1.897,559,1.17,560,1.17,561,1.17,562,1.17,563,1.17,564,1.17,565,1.17,566,1.897,567,1.17,568,1.17,569,1.52,570,1.52,571,1.607,572,1.17,573,0.938,574,2.392,575,1.17,576,1.17,577,1.897,578,3.023,579,1.344,580,1.17,581,1.17,582,1.17,583,1.17,584,1.52,585,1.17,586,1.17,587,1.17,588,1.17,589,1.17,590,1.17]],["title/components/ForgotPasswordComponent.html",[149,0.046,228,0.62]],["body/components/ForgotPasswordComponent.html",[3,0.296,4,0.296,5,0.252,7,0.296,8,1.024,17,1.137,22,0.938,25,0.031,26,0.569,32,3.302,45,0.788,49,0.018,84,0.341,85,0.296,106,0.296,107,0.209,138,1.727,147,0.023,148,0.018,149,0.077,150,0.66,151,1.211,152,1.096,153,1.096,154,1.096,155,0.932,159,1.115,160,1.238,161,1.096,162,1.387,163,1.271,164,0.858,165,1.024,167,1.024,173,1.204,180,0.938,210,0.932,211,1.424,212,1.424,213,1.096,214,1.675,215,1.096,216,1.424,217,0.788,218,1.096,219,0.788,220,1.096,221,1.096,222,0.6,223,1.011,224,1.096,225,0.66,226,0.932,227,1.424,228,1.103,229,1.424,230,0.788,231,1.424,232,1.096,233,0.788,234,1.096,235,0.722,236,1.096,237,0.788,238,0.66,239,0.932,240,0.722,241,1.096,242,0.722,243,1.096,244,0.788,245,1.096,246,0.932,247,0.932,248,1.096,249,1.096,337,3.463,591,4.47,592,2.698,593,4.47,594,4.024,595,3.097,596,3.097,597,4.024]],["title/components/GlobalConfirmComponent.html",[149,0.046,230,0.676]],["body/components/GlobalConfirmComponent.html",[3,0.271,4,0.271,5,0.231,7,0.271,8,0.967,17,0.722,22,1.066,24,0.854,25,0.031,26,0.606,27,0.449,28,0.662,45,1.09,49,0.016,84,0.419,85,0.271,106,0.271,107,0.192,108,1.643,111,1.088,138,0.927,147,0.022,148,0.016,149,0.074,150,0.604,151,1.143,152,1.004,153,1.004,154,1.004,155,0.854,159,1.052,160,1.186,161,1.004,162,1.373,163,1.258,164,0.786,165,0.967,167,0.967,172,1.71,173,1.163,175,2.199,176,2.648,180,1.144,186,1.799,187,1.004,197,3.543,210,0.854,211,1.344,212,1.344,213,1.004,214,1.618,215,1.004,216,1.344,217,0.722,218,1.004,219,0.722,220,1.859,221,1.004,222,0.55,223,0.927,224,1.004,225,0.604,226,0.854,227,1.344,228,0.662,229,1.344,230,1.163,231,1.843,232,1.004,233,0.722,234,1.004,235,0.662,236,1.004,237,0.722,238,0.604,239,0.854,240,0.662,241,1.004,242,0.662,243,1.004,244,0.722,245,1.004,246,0.854,247,0.854,248,1.004,249,1.004,341,4.152,368,2.838,369,2.838,370,3.799,434,1.981,454,1.799,598,4.152,599,2.838,600,5.12,601,4.542,602,3.393,603,3.393,604,3.393,605,3.393,606,2.838,607,3.393,608,3.799]],["title/components/GlobalErrorComponent.html",[149,0.046,233,0.676]],["body/components/GlobalErrorComponent.html",[3,0.277,4,0.277,5,0.236,7,0.277,8,0.982,17,0.739,22,1.01,24,0.874,25,0.031,26,0.613,27,0.685,28,0.677,45,0.739,49,0.016,84,0.425,85,0.277,106,0.277,107,0.196,108,1.682,112,0.948,125,1.419,138,0.948,147,0.022,148,0.016,149,0.075,150,0.619,151,1.161,152,1.028,153,1.028,154,1.028,155,0.874,159,1.069,160,1.2,161,1.028,162,1.377,163,1.262,164,0.804,165,0.982,167,0.982,169,1.161,171,1.884,173,1.174,180,0.899,186,1.841,187,1.028,210,0.874,211,1.365,212,1.365,213,1.028,214,1.633,215,1.028,216,1.365,217,0.739,218,1.028,219,0.739,220,1.028,221,1.028,222,0.563,223,0.948,224,1.028,225,0.619,226,0.874,227,1.365,228,0.677,229,1.365,230,0.739,231,1.866,232,1.028,233,1.174,234,1.028,235,0.677,236,1.028,237,0.739,238,0.619,239,0.874,240,0.677,241,1.028,242,0.677,243,1.028,244,0.739,245,1.028,246,0.874,247,0.874,248,1.028,249,1.028,253,4.02,259,1.543,339,4.02,598,4.02,606,2.904,609,2.904,610,3.446,611,5.179,612,4.612,613,3.473,614,4.612,615,4.612,616,3.473,617,4.612,618,3.473,619,2.904,620,3.473,621,3.473,622,3.473]],["title/components/LoginComponent.html",[149,0.046,235,0.62]],["body/components/LoginComponent.html",[1,3.236,3,0.205,4,0.205,5,0.175,7,0.205,8,0.796,11,3.48,17,0.796,20,2.462,22,1.081,24,0.647,25,0.032,26,0.522,27,0.583,28,0.502,31,0.73,32,3.135,38,2.575,43,1.532,45,0.939,48,1.409,49,0.012,52,1.666,53,1.363,54,1.874,56,1.107,57,2.726,58,3.681,68,3.529,71,3.529,77,1.666,84,0.447,85,0.205,89,3.139,90,0.968,93,1.409,106,0.205,107,0.145,112,1.323,125,1.529,134,1.246,136,1.363,138,1.022,147,0.018,148,0.012,149,0.064,150,0.458,151,0.942,152,0.761,153,0.761,154,0.761,155,0.647,159,0.867,160,1.022,161,0.761,162,1.323,163,1.212,164,0.867,165,0.796,167,0.796,169,0.942,173,1.031,180,0.502,199,2.462,200,1.501,201,1.051,203,1.246,204,1.501,205,1.246,210,0.647,211,1.107,212,1.107,213,0.761,214,1.434,215,0.761,216,1.107,217,0.547,218,0.761,219,0.547,220,0.761,221,0.761,222,0.417,223,0.702,224,0.761,225,0.458,226,0.647,227,1.107,228,0.502,229,1.107,230,0.547,231,1.107,232,0.761,233,0.547,234,0.761,235,0.945,236,0.761,237,0.547,238,0.458,239,0.647,240,0.502,241,0.761,242,0.502,243,0.761,244,0.547,245,1.305,246,0.647,247,0.647,248,0.761,249,0.761,259,1.662,260,2.152,262,2.726,265,1.363,306,1.666,451,1.363,453,1.363,569,2.184,570,2.827,573,1.501,584,2.184,610,1.501,623,2.151,624,4.411,625,3.742,626,4.305,627,4.411,628,4.051,629,4.051,630,2.151,631,4.051,632,3.689,633,3.742,634,3.129,635,2.572,636,2.572,637,2.572,638,3.689,639,2.572,640,2.572,641,2.151,642,2.151,643,2.151,644,2.151,645,2.151,646,2.151,647,2.151,648,2.151,649,2.151,650,2.151,651,2.151,652,2.184,653,3.129,654,2.151,655,2.151,656,2.151,657,4.411,658,4.305,659,2.151,660,2.151,661,2.151,662,2.151,663,2.151,664,2.151,665,2.572,666,2.572,667,2.151,668,1.874,669,2.151,670,3.129,671,3.742,672,4.051,673,4.051,674,3.129,675,3.129,676,2.151,677,2.151,678,2.151,679,2.151,680,2.151,681,2.151,682,2.151,683,3.129,684,2.151,685,2.151,686,2.151,687,3.129,688,2.151,689,2.572]],["title/modules/MaterialModule.html",[274,1.685,288,1.855]],["body/modules/MaterialModule.html",[3,0.256,4,0.256,5,0.338,25,0.03,49,0.015,59,3.653,84,0.617,85,0.256,106,0.256,107,0.181,147,0.021,148,0.015,187,0.948,192,1.113,200,1.87,274,2.636,276,2.963,281,2.076,288,2.55,292,2.334,293,3.89,294,3.653,295,2.334,296,2.076,302,2.334,321,4.823,371,3.183,380,2.831,381,2.076,382,2.831,383,2.076,387,2.076,389,2.076,395,1.87,449,2.55,500,3.653,690,3.203,691,4.369,692,4.369,693,4.369,694,4.369,695,4.369,696,4.369,697,4.369,698,4.971,699,4.369,700,4.369,701,3.203,702,3.203,703,3.203,704,3.203,705,4.369,706,3.203,707,4.971,708,3.203,709,4.369,710,4.369,711,4.369,712,3.203,713,4.369,714,3.203,715,4.369,716,3.203,717,4.369,718,3.203,719,4.369,720,3.203,721,4.369,722,3.203,723,4.369,724,3.203,725,4.369,726,3.203,727,4.369,728,4.369,729,3.203,730,3.653,731,4.369,732,3.203,733,4.369,734,3.203,735,4.369,736,3.203,737,2.679,738,4.369,739,3.203,740,4.369,741,3.203,742,4.369,743,4.369,744,3.203,745,4.369,746,3.203,747,4.369,748,4.369,749,3.203,750,4.369,751,4.369,752,4.369,753,4.369,754,3.203,755,4.369,756,3.203,757,4.369,758,3.203,759,4.369,760,3.203,761,4.369,762,3.203,763,4.369,764,4.369,765,3.203,766,4.369,767,3.203,768,4.369,769,3.203,770,4.369,771,3.203,772,4.369,773,3.203,774,4.369,775,3.203,776,4.369,777,3.203,778,4.369,779,3.203,780,4.369,781,3.203,782,4.369,783,4.369,784,3.203,785,3.203,786,3.203]],["title/injectables/MessagingService.html",[0,1.104,256,1.685]],["body/injectables/MessagingService.html",[0,1.519,2,1.872,3,0.256,4,0.256,5,0.218,7,0.256,8,0.931,17,0.683,19,3.446,22,1.125,24,1.101,25,0.032,26,0.518,27,0.578,28,0.853,31,0.97,34,2.337,36,2.833,45,1.059,48,1.208,49,0.015,62,1.554,84,0.532,85,0.256,87,1.701,88,1.701,101,1.787,106,0.256,107,0.181,111,1.029,112,0.876,125,1.311,134,2.409,147,0.021,148,0.015,169,1.101,180,0.853,253,2.337,256,2.318,259,1.425,265,2.318,267,1.872,268,2.337,269,2.683,308,2.683,449,1.872,610,1.872,619,2.683,652,1.872,787,2.683,788,4.975,789,4.975,790,5.343,791,5.343,792,4.373,793,3.208,794,5.769,795,4.373,796,3.208,797,3.208,798,4.373,799,3.208,800,4.975,801,4.373,802,3.208,803,3.208,804,3.208,805,3.208,806,3.208,807,3.208,808,3.208,809,3.208,810,5.591,811,3.208,812,4.373,813,3.208,814,3.208,815,4.373,816,4.373,817,3.208,818,3.208,819,3.208,820,3.208,821,3.208,822,4.975,823,3.208,824,3.208,825,2.683,826,3.208,827,3.208,828,3.208,829,3.208,830,3.208,831,3.208,832,3.208,833,3.208,834,3.208,835,3.208,836,3.208,837,3.208,838,3.208,839,3.208,840,3.208,841,3.208,842,3.208,843,3.208,844,4.373,845,3.208,846,4.373,847,3.208,848,3.208,849,3.208,850,3.208,851,3.208]],["title/classes/NotebookDto.html",[107,0.18,852,2.059]],["body/classes/NotebookDto.html",[0,1.634,3,0.286,4,0.286,5,0.243,7,0.286,19,3.068,22,1.201,25,0.032,26,0.622,27,0.815,28,1.266,31,1.274,46,3.406,48,2.184,49,0.017,84,0.485,85,0.286,87,1.897,88,1.897,104,2.319,105,2.089,106,0.286,107,0.266,111,1.147,112,1.435,147,0.022,148,0.017,169,1.184,191,3.068,192,1.826,193,1.685,194,2.279,378,2.494,391,1.59,403,2.546,652,2.746,852,3.858,853,3.578,854,2.607,855,5.53,856,3.829,857,3.829,858,3.578,859,3.578,860,3.578,861,3.578,862,3.578,863,3.578,864,3.578,865,3.578,866,2.993,867,2.993,868,2.993,869,2.993,870,3.935,871,2.993,872,2.993,873,2.993,874,2.993,875,2.993,876,2.993]],["title/injectables/NotebookService.html",[0,1.104,391,1.411]],["body/injectables/NotebookService.html",[0,1.626,2,2.072,3,0.283,4,0.283,5,0.241,7,0.283,8,0.996,17,0.755,19,3.468,22,1.159,24,1.495,25,0.032,26,0.717,27,0.786,28,1.159,31,1.276,45,1.231,46,3.749,48,2.178,49,0.017,84,0.483,85,0.283,87,1.882,88,1.882,104,2.3,105,2.072,106,0.283,107,0.265,111,1.138,112,0.969,147,0.022,148,0.017,191,2.072,192,1.233,193,1.138,194,1.719,378,2.951,391,2.079,403,1.719,446,2.732,652,2.732,852,4.101,854,2.586,855,5.142,856,2.586,857,2.586,866,3.914,867,2.969,868,3.914,869,2.969,870,4.655,871,3.914,872,2.969,873,3.914,874,2.969,875,3.914,876,2.969,877,4.68,878,4.68,879,4.68,880,4.68,881,3.55,882,3.55,883,3.55,884,3.55,885,3.55,886,2.969,887,3.55,888,3.55]],["title/components/NotesPanelComponent.html",[149,0.046,238,0.566]],["body/components/NotesPanelComponent.html",[0,1.007,3,0.231,4,0.147,5,0.125,7,0.287,8,0.617,11,2.326,17,0.391,20,2.192,22,1.132,24,0.904,25,0.032,26,0.558,27,0.713,28,0.7,31,0.998,36,1.19,43,0.638,45,0.944,49,0.014,56,1.062,80,1.19,84,0.435,85,0.147,90,0.692,93,0.692,97,1.072,102,0.974,106,0.147,107,0.104,111,0.589,112,1.348,125,2.016,138,0.502,147,0.014,148,0.009,149,0.052,150,0.516,151,0.73,152,0.544,153,0.544,154,0.544,155,0.462,157,1.287,159,0.671,160,0.832,161,0.544,162,1.248,163,1.143,164,0.671,165,0.617,167,0.617,169,0.73,170,2.986,171,0.75,172,0.692,173,0.867,180,0.795,182,1.338,187,0.544,188,1.072,190,2.875,191,2.59,192,1.638,193,1.422,199,0.816,201,2.09,202,2.752,203,1.739,204,1.692,205,2.283,206,2.095,207,2.111,208,1.878,209,1.536,210,0.462,211,0.858,212,0.858,213,0.544,214,1.206,215,0.544,216,0.858,217,0.391,218,0.544,219,0.391,220,0.544,221,0.544,222,0.298,223,0.98,224,0.544,225,0.327,226,0.462,227,0.858,228,0.358,229,0.858,230,0.391,231,0.858,232,0.544,233,0.391,234,0.544,235,0.358,236,0.544,237,0.391,238,0.726,239,1.357,240,0.358,241,0.544,242,0.358,243,0.544,244,0.391,245,0.544,246,0.462,247,1.117,248,0.544,249,0.544,259,2.192,260,1.811,330,3.108,344,1.072,375,0.974,378,1.903,379,1.19,391,2.094,392,1.19,394,2.326,395,1.072,396,2.641,397,1.692,398,2.095,402,2.641,403,1.404,417,2.095,420,0.974,434,2.752,443,1.878,445,2.326,446,2.379,448,1.878,451,0.974,453,0.974,462,1.19,469,1.404,470,1.19,471,1.19,477,1.878,503,2.615,508,1.536,519,1.536,520,2.424,521,1.536,522,1.536,528,1.536,531,2.111,535,2.111,536,2.111,537,1.338,538,3.232,539,2.111,540,3.232,541,1.338,542,2.111,543,2.615,544,2.615,545,2.615,546,2.111,547,2.326,548,3.435,549,3.435,550,1.338,552,2.615,553,2.111,554,2.111,555,2.615,556,2.111,557,2.111,558,2.111,559,1.338,560,1.338,561,2.111,562,2.111,563,1.338,564,1.338,565,1.338,566,2.615,567,1.338,568,1.338,569,1.692,570,1.692,572,1.338,573,1.072,574,2.615,575,1.338,576,1.338,577,2.111,578,3.435,579,1.536,580,2.111,581,1.338,582,2.111,583,1.338,584,1.692,585,1.338,586,1.338,587,1.338,588,1.338,589,2.969,590,1.338,610,1.072,730,1.536,856,1.338,857,1.338,889,4.903,890,4.076,891,2.898,892,2.898,893,1.837,894,1.837,895,1.837,896,1.837,897,1.837,898,1.837,899,1.837,900,1.837,901,1.837,902,1.837,903,2.898,904,1.837,905,1.837,906,1.837,907,1.837,908,1.837,909,2.898,910,2.898,911,2.898,912,2.898,913,2.898,914,2.898,915,2.898,916,2.898,917,2.898,918,2.898,919,1.837,920,1.837,921,1.837,922,2.898,923,1.837,924,1.837,925,1.837,926,1.837,927,3.409,928,2.898,929,3.409,930,2.898,931,2.898,932,5.115,933,4.076,934,3.409,935,3.409,936,2.898,937,2.898,938,2.898,939,2.898,940,1.837,941,1.536,942,2.424,943,1.837,944,1.837,945,1.536,946,1.536,947,1.837,948,1.837,949,1.837]],["title/injectables/ProfileService.html",[0,1.104,21,1.411]],["body/injectables/ProfileService.html",[0,1.257,2,1.433,3,0.196,4,0.196,5,0.167,7,0.196,8,0.77,16,3.592,17,0.523,18,2.054,19,2.766,20,2.427,21,1.607,22,0.924,24,1.193,25,0.032,26,0.72,27,0.668,28,1.268,29,3.025,31,1.283,34,3.85,35,4.689,36,3.541,37,4.57,38,1.433,39,4.57,43,1.948,45,0.914,46,3.541,48,1.617,49,0.012,50,3.452,62,1.752,67,3.084,84,0.437,85,0.196,86,2.635,87,1.302,88,1.302,89,1.591,90,0.925,92,2.054,93,1.362,96,2.054,97,1.433,98,2.054,99,2.783,100,2.635,101,1.755,102,1.918,103,1.789,104,1.591,105,1.433,106,0.196,107,0.139,111,0.787,112,0.671,113,5.193,118,2.054,119,4.225,147,0.017,148,0.012,192,1.257,193,1.866,371,3.452,401,2.653,404,2.716,405,2.716,406,2.716,407,2.716,452,2.344,454,1.918,456,3.084,469,1.752,608,5.089,886,3.025,950,1.789,951,3.592,952,2.456,953,3.618,954,4.085,955,2.456,956,4.738,957,5.607,958,4.738,959,4.738,960,4.738,961,4.738,962,3.618,963,2.456,964,3.618,965,2.456,966,1.789,967,2.054,968,2.456,969,2.456,970,2.456,971,3.025,972,3.025,973,3.025,974,3.025,975,3.618,976,3.618]],["title/components/RegisterComponent.html",[149,0.046,240,0.62]],["body/components/RegisterComponent.html",[1,3.087,3,0.178,4,0.178,5,0.151,7,0.178,8,0.715,11,3.3,14,1.859,17,0.715,20,2.349,21,2.349,22,1.062,24,0.56,25,0.032,26,0.479,27,0.535,28,0.434,31,0.655,32,2.973,38,2.633,43,1.567,45,0.861,48,1.265,49,0.011,52,1.441,53,1.179,54,2.949,56,0.994,57,2.447,58,2.923,68,3.286,71,3.286,73,3.773,74,3.773,75,3.385,77,3.528,84,0.469,85,0.178,89,2.923,90,0.837,93,1.823,101,1.372,106,0.178,107,0.126,112,1.322,125,1.654,134,1.96,136,2.146,138,0.607,139,1.859,147,0.016,148,0.011,149,0.059,150,0.396,151,0.845,152,0.658,153,0.658,154,0.658,155,0.56,159,0.778,160,0.938,161,0.658,162,1.292,163,1.184,164,0.778,165,0.715,167,0.715,169,0.845,173,0.96,180,0.434,199,2.349,200,1.298,201,0.908,203,1.077,204,1.298,205,1.077,210,0.56,211,0.994,212,0.994,213,0.658,214,1.335,215,0.658,216,0.994,217,0.473,218,0.658,219,0.473,220,1.198,221,0.658,222,0.36,223,0.607,224,0.658,225,0.396,226,0.56,227,0.994,228,0.434,229,0.994,230,0.473,231,0.994,232,0.658,233,0.473,234,0.658,235,0.434,236,0.658,237,0.473,238,0.396,239,0.56,240,0.88,241,0.658,242,0.434,243,0.658,244,0.473,245,1.198,246,0.56,247,0.56,248,0.658,249,0.658,259,2.004,260,2.262,262,2.447,306,1.441,393,1.441,401,0.988,451,1.179,453,1.179,455,2.923,469,1.077,474,1.441,569,1.96,570,2.633,573,1.298,584,1.96,610,2.363,626,4.05,628,3.773,629,3.773,630,1.859,631,3.773,632,3.385,634,2.809,638,3.385,641,1.859,642,1.859,643,1.859,644,1.859,645,1.859,646,1.859,647,1.859,648,3.773,649,1.859,650,1.859,651,1.859,652,1.96,653,2.809,654,1.859,655,1.859,656,1.859,658,4.661,659,1.859,660,1.859,661,1.859,662,1.859,663,1.859,664,2.809,667,1.859,668,3.286,669,3.385,670,2.809,672,4.553,673,4.553,674,2.809,675,2.809,676,1.859,677,1.859,678,1.859,679,1.859,680,1.859,681,1.859,682,1.859,683,2.809,684,1.859,685,1.859,686,1.859,687,2.809,688,1.859,951,1.859,954,1.62,977,1.859,978,4.048,979,3.359,980,4.048,981,4.048,982,3.359,983,2.223,984,2.223,985,2.223,986,2.223,987,2.223,988,2.223,989,1.62,990,2.223,991,2.223,992,2.223,993,4.843,994,2.223,995,2.223,996,2.223,997,2.223,998,2.223,999,2.223,1000,2.223,1001,2.223,1002,2.223,1003,3.359,1004,3.359,1005,2.223,1006,3.359]],["title/components/RestPasswordComponent.html",[149,0.046,242,0.62]],["body/components/RestPasswordComponent.html",[3,0.296,4,0.296,5,0.252,7,0.296,8,1.024,17,1.137,22,0.938,25,0.031,26,0.569,32,3.302,45,0.788,49,0.018,84,0.341,85,0.296,106,0.296,107,0.209,138,1.011,147,0.023,148,0.018,149,0.077,150,0.66,151,1.211,152,1.096,153,1.096,154,1.096,155,0.932,159,1.115,160,1.238,161,1.096,162,1.387,163,1.271,164,0.858,165,1.024,167,1.024,173,1.204,180,0.938,210,0.932,211,1.424,212,1.424,213,1.096,214,1.675,215,1.096,216,1.424,217,0.788,218,1.096,219,0.788,220,1.096,221,1.096,222,0.6,223,1.011,224,1.096,225,0.66,226,0.932,227,1.424,228,0.722,229,1.424,230,0.788,231,1.424,232,1.096,233,0.788,234,1.096,235,0.722,236,1.096,237,0.788,238,0.66,239,0.932,240,0.722,241,1.096,242,1.103,243,1.872,244,0.788,245,1.096,246,0.932,247,0.932,248,1.096,249,1.096,334,3.463,592,2.698,593,4.47,594,4.024,595,3.097,596,3.097,597,4.024,1007,4.47]],["title/components/SmartAssistPanelComponent.html",[149,0.046,244,0.676]],["body/components/SmartAssistPanelComponent.html",[3,0.202,4,0.202,5,0.172,7,0.295,8,0.786,17,0.93,22,0.852,25,0.032,26,0.437,38,2.157,45,0.786,49,0.012,84,0.233,85,0.202,93,1.391,97,1.476,102,2.831,106,0.202,107,0.143,138,0.69,144,4.018,147,0.018,148,0.012,149,0.063,150,0.45,151,0.93,152,0.748,153,0.748,154,0.748,155,0.636,159,0.856,160,1.012,161,0.748,162,1.32,163,1.209,164,1.184,165,0.786,167,0.786,173,1.023,180,0.852,192,0.878,201,2.181,202,3.219,203,1.224,205,2.115,206,2.157,208,2.83,210,0.636,211,1.094,212,1.094,213,0.748,214,1.422,215,0.748,216,1.094,217,0.538,218,0.748,219,0.538,220,0.748,221,0.748,222,0.41,223,0.69,224,0.748,225,0.45,226,0.636,227,1.094,228,0.493,229,1.094,230,0.538,231,1.094,232,0.748,233,0.538,234,0.748,235,0.493,236,0.748,237,0.538,238,0.45,239,1.099,240,0.493,241,0.748,242,0.493,243,0.748,244,1.023,245,1.734,246,1.578,247,1.209,248,0.748,249,0.748,328,3.5,375,1.34,397,2.157,398,2.549,401,1.642,403,1.224,454,2.547,469,1.79,503,3.5,531,2.692,535,2.692,536,2.692,537,1.842,538,3.5,539,2.692,540,3.182,541,1.842,542,1.842,543,3.182,544,2.692,545,3.182,546,1.842,547,3.312,548,3.724,549,3.724,550,1.842,551,2.114,552,3.182,553,2.692,554,2.692,555,3.182,556,2.692,557,2.692,558,2.692,559,1.842,560,1.842,561,1.842,562,1.842,563,1.842,564,1.842,565,1.842,566,3.182,567,1.842,568,1.842,569,2.157,570,2.157,572,1.842,573,1.476,574,2.692,575,1.842,576,1.842,577,2.692,578,3.724,580,1.842,581,1.842,582,2.692,583,2.692,584,2.157,585,1.842,586,1.842,587,1.842,588,1.842,589,2.692,590,1.842,927,4.018,929,4.018,935,4.018,941,2.114,942,3.091,945,2.114,946,2.114,1008,4.018,1009,2.528,1010,2.528,1011,2.528,1012,2.528,1013,2.528,1014,2.528,1015,2.528,1016,2.528,1017,3.695,1018,3.695,1019,3.695,1020,2.528,1021,2.114,1022,3.695,1023,3.695,1024,3.695,1025,4.805,1026,3.695,1027,3.695,1028,3.695,1029,3.695,1030,3.695,1031,3.695,1032,3.695,1033,2.528,1034,2.528]],["title/interfaces/User.html",[43,1.104,189,0.868]],["body/interfaces/User.html",[3,0.344,4,0.344,5,0.293,7,0.344,25,0.031,26,0.678,27,0.845,28,1.276,31,1.291,43,1.838,49,0.02,106,0.344,147,0.025,148,0.02,169,1.332,189,1.175,193,1.837,372,2.281,404,2.774,405,2.774,406,2.774,407,2.774,456,3.344,954,4.173,971,3.599,972,3.599,973,3.599,974,3.599,1035,3.599,1036,4.303,1037,4.303,1038,4.303,1039,4.303]],["title/coverage.html",[1040,3.633]],["body/coverage.html",[0,1.975,1,1.966,5,0.229,6,3.715,21,1.496,25,0.032,27,0.446,43,1.17,49,0.016,60,2.817,94,2.453,99,2.928,101,1.376,107,0.19,147,0.021,148,0.016,149,0.092,150,0.6,156,3.292,157,2.007,158,3.292,177,1.785,189,1.552,217,0.717,219,0.717,222,0.546,225,0.6,228,0.657,230,0.717,233,0.717,235,0.657,237,0.717,238,0.805,240,0.657,242,0.657,244,0.717,246,1.137,250,2.817,256,1.785,267,2.638,324,2.977,328,2.453,330,2.396,334,2.182,337,2.182,339,2.453,341,2.453,346,2.453,349,2.189,360,2.817,361,2.817,373,1.966,374,3.305,375,3.103,391,1.496,417,3.848,433,1.966,483,3.292,484,3.292,487,2.182,591,2.817,592,3.292,598,3.292,599,2.817,609,2.817,623,2.817,787,2.817,852,2.182,854,3.292,889,3.779,950,3.715,966,2.453,977,2.817,989,2.453,1007,2.817,1008,2.817,1021,2.817,1035,2.817,1040,2.817,1041,3.368,1042,3.368,1043,3.368,1044,5.1,1045,4.519,1046,3.368,1047,2.817,1048,2.817,1049,5.979,1050,5.1,1051,4.519,1052,4.519,1053,3.368,1054,3.368,1055,3.368,1056,3.368,1057,4.519,1058,3.368,1059,3.368,1060,2.817,1061,3.368,1062,3.368,1063,3.368,1064,3.368,1065,3.368,1066,3.368,1067,5.853,1068,4.519,1069,3.368,1070,3.368,1071,2.817,1072,2.817,1073,3.368,1074,3.368]],["title/dependencies.html",[277,2.478,1075,2.65]],["body/dependencies.html",[25,0.032,49,0.02,85,0.344,88,2.281,90,1.62,147,0.025,148,0.02,265,2.281,277,2.788,279,3.854,295,3.854,296,3.428,302,3.135,303,3.599,306,2.788,316,3.599,737,3.599,1076,4.303,1077,6.48,1078,4.303,1079,4.303,1080,4.303,1081,4.303,1082,4.303,1083,4.303,1084,4.303,1085,4.303,1086,4.303,1087,4.303,1088,4.303,1089,5.291,1090,4.303,1091,4.303,1092,4.303,1093,4.303,1094,4.303,1095,4.303,1096,4.303,1097,4.303,1098,4.303,1099,5.291,1100,4.303,1101,4.303,1102,4.303,1103,4.303,1104,4.303,1105,4.303,1106,4.303,1107,4.303,1108,4.303,1109,4.303,1110,4.303,1111,4.303,1112,4.303]],["title/miscellaneous/functions.html",[1113,1.717,1114,3.198]],["body/miscellaneous/functions.html",[7,0.4,24,1.261,25,0.029,26,0.593,28,0.977,49,0.024,147,0.027,148,0.024,989,4.22,1047,4.189,1048,4.844,1113,3.246,1114,4.189,1115,5.009,1116,5.009,1117,5.792,1118,5.009]],["title/index.html",[7,0.254,1119,2.657]],["body/index.html",[2,2.279,25,0.031,49,0.019,80,2.53,107,0.221,147,0.024,148,0.019,150,0.976,151,0.983,210,0.983,217,1.318,219,1.166,222,0.888,225,0.976,228,1.069,230,1.166,233,1.166,235,1.069,237,1.166,238,1.028,240,1.069,242,1.069,244,1.166,256,2.905,274,2.07,275,4.364,276,2.07,277,2.53,278,3.265,279,2.844,280,3.265,281,2.53,282,3.265,283,3.265,284,3.265,285,3.265,286,3.265,287,3.199,288,3.199,289,4.163,290,3.265,357,2.53,372,2.07,547,2.53,934,3.265,1060,3.265,1119,3.265,1120,4.978,1121,3.904]],["title/modules.html",[276,2.303]],["body/modules.html",[25,0.028,49,0.024,147,0.028,148,0.024,275,3.268,276,2.673,287,2.943,288,2.943,296,3.268,825,4.863,1122,5.043,1123,5.043,1124,6.127,1125,5.815]],["title/routes.html",[357,2.815]],["body/routes.html",[25,0.028,49,0.025,147,0.028,148,0.025,357,3.367]],["title/miscellaneous/variables.html",[420,2.027,1113,1.717]],["body/miscellaneous/variables.html",[6,2.885,7,0.316,25,0.032,27,0.832,31,0.979,49,0.019,50,4.226,86,3.659,94,3.659,95,3.312,99,3.759,100,3.659,101,2.052,102,2.663,103,3.659,125,2.499,147,0.024,148,0.019,259,2.794,260,1.759,265,2.663,267,3.386,353,4.201,420,2.099,668,2.885,950,2.885,966,3.659,967,3.312,1071,3.312,1072,3.312,1113,2.566,1126,5.023,1127,3.96,1128,3.96,1129,5.023,1130,5.023,1131,5.023,1132,5.023,1133,5.023,1134,5.023,1135,5.023,1136,5.023,1137,5.023,1138,5.023,1139,5.023,1140,5.023,1141,5.023,1142,5.023,1143,5.023,1144,5.023,1145,5.023,1146,5.023,1147,5.023,1148,5.023]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":417,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["0/1",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":208,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["1",{"_index":934,"title":{},"body":{"components/NotesPanelComponent.html":{},"index.html":{}}}],["1.0.0",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":202,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["10px",{"_index":209,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/NotesPanelComponent.html":{}}}],["11",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["11.1.0",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["12.0.2",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":541,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["14",{"_index":1060,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["15px",{"_index":207,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/EditProfileComponent.html":{},"components/NotesPanelComponent.html":{}}}],["15s",{"_index":1033,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["16",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":928,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["1:254968215542:web:be0931c257ad1d8a60b9d7",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1s",{"_index":544,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["2",{"_index":949,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["2.1.0",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["2.22.0",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["2.8.0",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":929,"title":{},"body":{"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["20px",{"_index":579,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["25",{"_index":1021,"title":{},"body":{"components/SmartAssistPanelComponent.html":{},"coverage.html":{}}}],["254968215542",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["255",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["27",{"_index":1004,"title":{},"body":{"components/RegisterComponent.html":{}}}],["27\"+this.form.get('phonenumber')?.value",{"_index":995,"title":{},"body":{"components/RegisterComponent.html":{}}}],["2em",{"_index":678,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["2px",{"_index":556,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["3",{"_index":547,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{},"index.html":{}}}],["3.0.0",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["39px",{"_index":567,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["3px",{"_index":560,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["400",{"_index":946,"title":{},"body":{"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["400px",{"_index":677,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["40px",{"_index":583,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["4px",{"_index":1034,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["5",{"_index":1120,"title":{},"body":{"index.html":{}}}],["5.0.1",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["5/45",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":462,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["5px",{"_index":942,"title":{},"body":{"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["5vh",{"_index":568,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["6",{"_index":1121,"title":{},"body":{"index.html":{}}}],["6.1.5",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["68.3",{"_index":408,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["7/9",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["8.6.8",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["90vh",{"_index":553,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["99vh",{"_index":565,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["_",{"_index":432,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["_messaging",{"_index":832,"title":{},"body":{"injectables/MessagingService.html":{}}}],["_messaging.onmessage",{"_index":833,"title":{},"body":{"injectables/MessagingService.html":{}}}],["_messaging.onmessage.bind(_messaging",{"_index":834,"title":{},"body":{"injectables/MessagingService.html":{}}}],["_messaging.ontokenrefresh",{"_index":835,"title":{},"body":{"injectables/MessagingService.html":{}}}],["_messaging.ontokenrefresh.bind(_messaging",{"_index":836,"title":{},"body":{"injectables/MessagingService.html":{}}}],["_nanoseconds\":0",{"_index":1000,"title":{},"body":{"components/RegisterComponent.html":{}}}],["_seconds\":'+date.now().tostring",{"_index":999,"title":{},"body":{"components/RegisterComponent.html":{}}}],["_transformer",{"_index":410,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["a11ymodule",{"_index":766,"title":{},"body":{"modules/MaterialModule.html":{}}}],["absolute",{"_index":539,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["account",{"_index":38,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["account_api",{"_index":94,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountservice",{"_index":1,"title":{"injectables/AccountService.html":{}},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["aces",{"_index":938,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["actions",{"_index":607,"title":{},"body":{"components/GlobalConfirmComponent.html":{}}}],["activatedroute",{"_index":89,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{}}}],["actual_component",{"_index":249,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["add",{"_index":164,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["addnotebookcomponent",{"_index":150,"title":{"components/AddNotebookComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["address",{"_index":674,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["aizasyafpqocqy42nzigyd5aph3ospbjvadj0o0",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["algorithmic",{"_index":937,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["align",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["alignment",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["allow",{"_index":144,"title":{},"body":{"injectables/AccountService.html":{},"components/SmartAssistPanelComponent.html":{}}}],["already",{"_index":54,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["angular",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":767,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/bidi",{"_index":769,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/drag",{"_index":784,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/layout",{"_index":706,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/observers",{"_index":771,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/overlay",{"_index":773,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/platform",{"_index":775,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/portal",{"_index":777,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/stepper",{"_index":779,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/table",{"_index":781,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/tree",{"_index":389,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/common",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":87,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"injectables/ProfileService.html":{}}}],["angular/compiler",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":85,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/database",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/firestore",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/messaging",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"injectables/MessagingService.html":{}}}],["angular/fire/storage",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":714,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":710,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":383,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":708,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":744,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/core",{"_index":765,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":716,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":187,"title":{},"body":{"components/AddNotebookComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"modules/MaterialModule.html":{},"components/NotesPanelComponent.html":{}}}],["angular/material/expansion",{"_index":381,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":718,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":736,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":746,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":712,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":734,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":729,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":762,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":748,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":720,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":722,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":395,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"modules/MaterialModule.html":{},"components/NotesPanelComponent.html":{}}}],["angular/material/slide",{"_index":726,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":724,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":756,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":760,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/stepper",{"_index":739,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":758,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":741,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":732,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":754,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":387,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":90,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppRoutingModule.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angularfireauthmodule",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiredatabasemodule",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremessaging",{"_index":794,"title":{},"body":{"injectables/MessagingService.html":{}}}],["angularfiremessagingmodule",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoragemodule",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodule",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":35,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["apikey",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":163,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["app.component",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module.ts",{"_index":698,"title":{},"body":{"modules/MaterialModule.html":{}}}],["appcomponent",{"_index":217,"title":{"components/AppComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["appid",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/json",{"_index":103,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":275,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appropriate",{"_index":1028,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["approutingmodule",{"_index":287,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["arno",{"_index":922,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["assist",{"_index":246,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{}}}],["async",{"_index":11,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{}}}],["asyncpipe",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["attributes",{"_index":459,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["authdomain",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":856,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{}}}],["auto",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["available",{"_index":825,"title":{},"body":{"injectables/MessagingService.html":{},"modules.html":{}}}],["avoid",{"_index":693,"title":{},"body":{"modules/MaterialModule.html":{}}}],["await",{"_index":650,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["backdrop",{"_index":586,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["backend",{"_index":37,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["background",{"_index":570,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["backgroundimg",{"_index":654,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["bar",{"_index":751,"title":{},"body":{"modules/MaterialModule.html":{}}}],["based",{"_index":472,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["bdk2floonbvaczrkc1riy2a9vylikujdwphbmhoxzv3ztnqlne1fanksu190peq",{"_index":807,"title":{},"body":{"injectables/MessagingService.html":{}}}],["behaviorsubject",{"_index":803,"title":{},"body":{"injectables/MessagingService.html":{}}}],["behaviorsubject(null",{"_index":801,"title":{},"body":{"injectables/MessagingService.html":{}}}],["bidimodule",{"_index":768,"title":{},"body":{"modules/MaterialModule.html":{}}}],["bio",{"_index":404,"title":{},"body":{"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["bio?:string",{"_index":974,"title":{},"body":{"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["biography",{"_index":494,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["black",{"_index":558,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["block",{"_index":204,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{}}}],["body",{"_index":652,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/RegisterComponent.html":{}}}],["boolean",{"_index":194,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["bootstrap",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["border",{"_index":555,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["bottom",{"_index":206,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["box",{"_index":575,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["browse",{"_index":1124,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["bundle",{"_index":702,"title":{},"body":{"modules/MaterialModule.html":{}}}],["call",{"_index":451,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{}}}],["cancel",{"_index":197,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/GlobalConfirmComponent.html":{}}}],["capstone",{"_index":933,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["card",{"_index":573,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["catch((err",{"_index":827,"title":{},"body":{"injectables/MessagingService.html":{}}}],["cdk",{"_index":786,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdksteppermodule",{"_index":778,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktablemodule",{"_index":780,"title":{},"body":{"modules/MaterialModule.html":{}}}],["cdktreemodule",{"_index":782,"title":{},"body":{"modules/MaterialModule.html":{}}}],["center",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["check",{"_index":52,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["chevron_right",{"_index":534,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["children",{"_index":377,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["class",{"_index":107,"title":{"classes/NotebookDto.html":{}},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":853,"title":{},"body":{"classes/NotebookDto.html":{}}}],["closed",{"_index":470,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["closenotepanelbtn",{"_index":890,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["closepanelbtn",{"_index":551,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["cluster_appmodule",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["clutter",{"_index":704,"title":{},"body":{"modules/MaterialModule.html":{}}}],["code",{"_index":409,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["col",{"_index":1014,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["col.style.width",{"_index":1019,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["color",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["component",{"_index":149,"title":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":215,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["components",{"_index":151,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"index.html":{}}}],["components/account/forgot",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/account/login/login.component",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/account/register/register.component",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/account/reset",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/modals/global/global",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["components/panels/folder",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["components/panels/notes",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["components/panels/smart",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["computer",{"_index":497,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["confirm",{"_index":220,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["confirm'},{'name",{"_index":232,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["confirm.component",{"_index":342,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm.component.html",{"_index":601,"title":{},"body":{"components/GlobalConfirmComponent.html":{}}}],["confirm.component.scss",{"_index":600,"title":{},"body":{"components/GlobalConfirmComponent.html":{}}}],["confirm.component.ts",{"_index":599,"title":{},"body":{"components/GlobalConfirmComponent.html":{},"coverage.html":{}}}],["confirm.component.ts:11",{"_index":602,"title":{},"body":{"components/GlobalConfirmComponent.html":{}}}],["confirm.component.ts:15",{"_index":605,"title":{},"body":{"components/GlobalConfirmComponent.html":{}}}],["confirm.component.ts:18",{"_index":604,"title":{},"body":{"components/GlobalConfirmComponent.html":{}}}],["confirm.component.ts:22",{"_index":603,"title":{},"body":{"components/GlobalConfirmComponent.html":{}}}],["confirm/global",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"components/GlobalConfirmComponent.html":{},"coverage.html":{}}}],["confirmdeletecomponent",{"_index":219,"title":{"components/ConfirmDeleteComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["console.error('unable",{"_index":840,"title":{},"body":{"injectables/MessagingService.html":{}}}],["console.log(\"error",{"_index":135,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["console.log(\"new",{"_index":847,"title":{},"body":{"injectables/MessagingService.html":{}}}],["console.log('an",{"_index":828,"title":{},"body":{"injectables/MessagingService.html":{}}}],["console.log('no",{"_index":823,"title":{},"body":{"injectables/MessagingService.html":{}}}],["console.log(currenttoken",{"_index":814,"title":{},"body":{"injectables/MessagingService.html":{}}}],["console.log(err.error.message",{"_index":143,"title":{},"body":{"injectables/AccountService.html":{}}}],["console.log(error",{"_index":926,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["console.log(payload",{"_index":843,"title":{},"body":{"injectables/MessagingService.html":{}}}],["console.log(res",{"_index":821,"title":{},"body":{"injectables/MessagingService.html":{}}}],["console.log(result",{"_index":909,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["console.log(token",{"_index":839,"title":{},"body":{"injectables/MessagingService.html":{}}}],["const",{"_index":93,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppRoutingModule.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":621,"title":{},"body":{"components/GlobalErrorComponent.html":{}}}],["constructor(angularfiremessaging",{"_index":793,"title":{},"body":{"injectables/MessagingService.html":{}}}],["constructor(data",{"_index":613,"title":{},"body":{"components/GlobalErrorComponent.html":{}}}],["constructor(dialogref",{"_index":175,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/GlobalConfirmComponent.html":{}}}],["constructor(fb",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":18,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["constructor(httpclient",{"_index":881,"title":{},"body":{"injectables/NotebookService.html":{}}}],["constructor(messagingservice",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(notebookservice",{"_index":893,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["constructor(panel",{"_index":507,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["constructor(private",{"_index":111,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/GlobalConfirmComponent.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{}}}],["constructor(public",{"_index":195,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{}}}],["content",{"_index":102,"title":{},"body":{"injectables/AccountService.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/SmartAssistPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["controlname",{"_index":1118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["correct",{"_index":959,"title":{},"body":{"injectables/ProfileService.html":{}}}],["course",{"_index":191,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{}}}],["cover",{"_index":572,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["coverage",{"_index":1040,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":469,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["createnotebook",{"_index":877,"title":{},"body":{"injectables/NotebookService.html":{}}}],["createnotebook(notebookdto",{"_index":871,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["createuser",{"_index":951,"title":{},"body":{"injectables/ProfileService.html":{},"components/RegisterComponent.html":{}}}],["createuser(uid",{"_index":953,"title":{},"body":{"injectables/ProfileService.html":{}}}],["curentroute",{"_index":121,"title":{},"body":{"injectables/AccountService.html":{}}}],["current",{"_index":41,"title":{},"body":{"injectables/AccountService.html":{}}}],["currentmessage",{"_index":788,"title":{},"body":{"injectables/MessagingService.html":{}}}],["currenttoken",{"_index":800,"title":{},"body":{"injectables/MessagingService.html":{}}}],["cursor",{"_index":943,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["data",{"_index":171,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/GlobalErrorComponent.html":{},"components/NotesPanelComponent.html":{}}}],["data.userinfo.bio",{"_index":463,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["data.userinfo.department",{"_index":464,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["data.userinfo.institution",{"_index":466,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["data.userinfo.name",{"_index":465,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["data.userinfo.program",{"_index":467,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["data.userinfo.workstatus",{"_index":468,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["databaseurl",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":428,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["date",{"_index":66,"title":{},"body":{"injectables/AccountService.html":{}}}],["date.now().tostring()).subscribe(resp",{"_index":1002,"title":{},"body":{"components/RegisterComponent.html":{}}}],["datejoined",{"_index":954,"title":{},"body":{"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["datejoined:string",{"_index":1039,"title":{},"body":{"interfaces/User.html":{}}}],["datejoined:{\"_seconds\",1,\"_nanoseconds\":1",{"_index":961,"title":{},"body":{"injectables/ProfileService.html":{}}}],["datejoined?:string",{"_index":975,"title":{},"body":{"injectables/ProfileService.html":{}}}],["declarations",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["decorators",{"_index":182,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/EditProfileComponent.html":{},"components/NotesPanelComponent.html":{}}}],["deep",{"_index":588,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["default",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/FolderPanelComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["delete",{"_index":40,"title":{},"body":{"injectables/AccountService.html":{},"components/ConfirmDeleteComponent.html":{}}}],["delete'},{'name",{"_index":221,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["delete.component",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["delete.component.html",{"_index":363,"title":{},"body":{"components/ConfirmDeleteComponent.html":{}}}],["delete.component.scss",{"_index":362,"title":{},"body":{"components/ConfirmDeleteComponent.html":{}}}],["delete.component.ts",{"_index":361,"title":{},"body":{"components/ConfirmDeleteComponent.html":{},"coverage.html":{}}}],["delete.component.ts:13",{"_index":367,"title":{},"body":{"components/ConfirmDeleteComponent.html":{}}}],["delete.component.ts:16",{"_index":366,"title":{},"body":{"components/ConfirmDeleteComponent.html":{}}}],["delete.component.ts:20",{"_index":365,"title":{},"body":{"components/ConfirmDeleteComponent.html":{}}}],["delete.component.ts:9",{"_index":364,"title":{},"body":{"components/ConfirmDeleteComponent.html":{}}}],["delete/confirm",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"coverage.html":{}}}],["deleteuser",{"_index":9,"title":{},"body":{"injectables/AccountService.html":{}}}],["deleteuser(emailaddress",{"_index":30,"title":{},"body":{"injectables/AccountService.html":{}}}],["demo",{"_index":932,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["department",{"_index":405,"title":{},"body":{"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["department?:string",{"_index":971,"title":{},"body":{"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["dependencies",{"_index":277,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":192,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"modules/MaterialModule.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/SmartAssistPanelComponent.html":{}}}],["dialog",{"_index":434,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/NotesPanelComponent.html":{}}}],["dialogdata",{"_index":177,"title":{"interfaces/DialogData.html":{}},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"coverage.html":{}}}],["dialogref",{"_index":172,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/NotesPanelComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":471,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["directive",{"_index":213,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["directives",{"_index":248,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["directorynode",{"_index":373,"title":{"interfaces/DirectoryNode.html":{}},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"coverage.html":{}}}],["display",{"_index":203,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["displayname",{"_index":74,"title":{},"body":{"injectables/AccountService.html":{},"components/RegisterComponent.html":{}}}],["document",{"_index":936,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["document.body.classname",{"_index":653,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["document.getelementbyid('smartassistcontainer",{"_index":1012,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["documentation",{"_index":1041,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":154,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["domain",{"_index":1031,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["dont",{"_index":675,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["dragdropmodule",{"_index":783,"title":{},"body":{"modules/MaterialModule.html":{}}}],["drawer",{"_index":585,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["drop",{"_index":785,"title":{},"body":{"modules/MaterialModule.html":{}}}],["dynamic",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":223,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["editnotebook",{"_index":891,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["editnotebook(id",{"_index":894,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["editnotebookbtn",{"_index":948,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["editnotebookicon",{"_index":947,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["editorjs",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["editorjs/editorjs",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["editorjs/list",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["editorjs/nested",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["editorjs/paragraph",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["editorjs/text",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["editorjs/underline",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["editprofilecomponent",{"_index":222,"title":{"components/EditProfileComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["editprofiledialogdata",{"_index":487,"title":{"interfaces/EditProfileDialogData.html":{}},"body":{"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"coverage.html":{}}}],["ef8zvb_5adjtfgdnguvoyxo",{"_index":808,"title":{},"body":{"injectables/MessagingService.html":{}}}],["element",{"_index":212,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["email",{"_index":71,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emailaddress",{"_index":44,"title":{},"body":{"injectables/AccountService.html":{}}}],["encapsulation",{"_index":399,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["endpoint",{"_index":39,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["enter",{"_index":956,"title":{},"body":{"injectables/ProfileService.html":{}}}],["entered",{"_index":473,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["environment",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MessagingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MessagingService.html":{}}}],["err",{"_index":134,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"components/RegisterComponent.html":{}}}],["err.error.message",{"_index":136,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error",{"_index":610,"title":{},"body":{"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{}}}],["error'},{'name",{"_index":234,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["error.component",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["error.component.html",{"_index":612,"title":{},"body":{"components/GlobalErrorComponent.html":{}}}],["error.component.scss",{"_index":611,"title":{},"body":{"components/GlobalErrorComponent.html":{}}}],["error.component.ts",{"_index":609,"title":{},"body":{"components/GlobalErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:13",{"_index":615,"title":{},"body":{"components/GlobalErrorComponent.html":{}}}],["error.component.ts:16",{"_index":616,"title":{},"body":{"components/GlobalErrorComponent.html":{}}}],["error/global",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"components/GlobalErrorComponent.html":{},"coverage.html":{}}}],["errormessage",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error{{message",{"_index":622,"title":{},"body":{"components/GlobalErrorComponent.html":{}}}],["ex",{"_index":496,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["exampleflatnode",{"_index":433,"title":{"interfaces/ExampleFlatNode.html":{}},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"coverage.html":{}}}],["expand_more",{"_index":533,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["expandable",{"_index":414,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["export",{"_index":106,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"interfaces/User.html":{}}}],["exports",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"index.html":{}}}],["fail",{"_index":129,"title":{},"body":{"injectables/AccountService.html":{}}}],["false",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["field",{"_index":200,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/EditProfileComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"components/RegisterComponent.html":{}}}],["fields",{"_index":460,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["filled",{"_index":920,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["firebase",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.initializeapp(environment.firebase",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"injectables/MessagingService.html":{}}}],["firebase.messaging",{"_index":805,"title":{},"body":{"injectables/MessagingService.html":{}}}],["firebase/database",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["first",{"_index":124,"title":{},"body":{"injectables/AccountService.html":{}}}],["fit",{"_index":1020,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["fixed",{"_index":554,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["flat",{"_index":482,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["flattreecontrol",{"_index":388,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["flattreecontrol(node",{"_index":423,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["folder",{"_index":226,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["folderpanelcomponent",{"_index":225,"title":{"components/FolderPanelComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["font",{"_index":548,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["for(let",{"_index":908,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["forgot",{"_index":138,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["forgotpassword",{"_index":141,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppRoutingModule.html":{}}}],["forgotpasswordcomponent",{"_index":228,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["form",{"_index":199,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{}}}],["format",{"_index":960,"title":{},"body":{"injectables/ProfileService.html":{}}}],["formbuilder",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":60,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["functional",{"_index":1022,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["functions",{"_index":1114,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["general",{"_index":851,"title":{},"body":{"injectables/MessagingService.html":{}}}],["generate",{"_index":826,"title":{},"body":{"injectables/MessagingService.html":{}}}],["getcurrentuser",{"_index":10,"title":{},"body":{"injectables/AccountService.html":{}}}],["getnotebookbyid",{"_index":878,"title":{},"body":{"injectables/NotebookService.html":{}}}],["getnotebookbyid(notebookid",{"_index":868,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["getuserdetails",{"_index":452,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/ProfileService.html":{}}}],["getuserdetails(userid",{"_index":962,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuserdetails/'+userid",{"_index":969,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getusernotebooks",{"_index":446,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{}}}],["getusernotebooks(userid",{"_index":866,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["global",{"_index":231,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["globalconfirmcomponent",{"_index":230,"title":{"components/GlobalConfirmComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["globalerrorcomponent",{"_index":233,"title":{"components/GlobalErrorComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["go",{"_index":665,"title":{},"body":{"components/LoginComponent.html":{}}}],["graph",{"_index":1125,"title":{},"body":{"modules.html":{}}}],["handbook",{"_index":670,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["haschild",{"_index":431,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["header",{"_index":97,"title":{},"body":{"injectables/AccountService.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/SmartAssistPanelComponent.html":{}}}],["headers",{"_index":100,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":552,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["helps",{"_index":692,"title":{},"body":{"modules/MaterialModule.html":{}}}],["hidden",{"_index":562,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["home",{"_index":666,"title":{},"body":{"components/LoginComponent.html":{}}}],["host",{"_index":563,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["html",{"_index":211,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["htmlelement",{"_index":1013,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["http",{"_index":29,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["http://localhost:5001/account",{"_index":95,"title":{},"body":{"injectables/AccountService.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:5001/user",{"_index":967,"title":{},"body":{"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":19,"title":{},"body":{"injectables/AccountService.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"injectables/ProfileService.html":{}}}],["httpclientmodule",{"_index":343,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":86,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["httpoptions",{"_index":99,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["https://smartstudentnotebook",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":378,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{}}}],["identifier",{"_index":1042,"title":{},"body":{"coverage.html":{}}}],["if(col",{"_index":1018,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["if(curentroute",{"_index":140,"title":{},"body":{"injectables/AccountService.html":{}}}],["if(sidenav.style.width",{"_index":1016,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["image",{"_index":569,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["implements",{"_index":159,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["import",{"_index":84,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["important",{"_index":578,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["importing",{"_index":694,"title":{},"body":{"modules/MaterialModule.html":{}}}],["imports",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["includes",{"_index":691,"title":{},"body":{"modules/MaterialModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"interfaces/User.html":{}}}],["information",{"_index":67,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/ProfileService.html":{}}}],["inject",{"_index":108,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{}}}],["inject(mat_dialog_data",{"_index":183,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccountService.html":{},"injectables/MessagingService.html":{},"injectables/NotebookService.html":{},"injectables/ProfileService.html":{}},"body":{"injectables/AccountService.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccountService.html":{},"injectables/MessagingService.html":{},"injectables/NotebookService.html":{},"injectables/ProfileService.html":{},"index.html":{}}}],["injected",{"_index":697,"title":{},"body":{"modules/MaterialModule.html":{}}}],["institution",{"_index":193,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["institution?:string",{"_index":1038,"title":{},"body":{"interfaces/User.html":{}}}],["interface",{"_index":189,"title":{"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"interfaces/User.html":{}},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":372,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"interfaces/User.html":{},"index.html":{}}}],["isuserloggedin",{"_index":12,"title":{},"body":{"injectables/AccountService.html":{}}}],["jquery",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":119,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["json.parse(localstorage.getitem('user",{"_index":436,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["json.parse(localstorage.getitem('userprofile",{"_index":438,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["june",{"_index":927,"title":{},"body":{"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["keyboard_arrow_left",{"_index":531,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["keyboard_arrow_right",{"_index":536,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["larger",{"_index":550,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["layoutmodule",{"_index":705,"title":{},"body":{"modules/MaterialModule.html":{}}}],["left",{"_index":566,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["legend",{"_index":210,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"index.html":{}}}],["level",{"_index":412,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["linear",{"_index":545,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["list",{"_index":737,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["literal",{"_index":614,"title":{},"body":{"components/GlobalErrorComponent.html":{}}}],["local",{"_index":63,"title":{},"body":{"injectables/AccountService.html":{}}}],["localstorage",{"_index":127,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["localstorage.getitem('user",{"_index":450,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["localstorage.setitem(\"user\",json.stringify(data",{"_index":137,"title":{},"body":{"injectables/AccountService.html":{}}}],["localstorage.setitem(\"userprofile\",json.stringify(user",{"_index":133,"title":{},"body":{"injectables/AccountService.html":{}}}],["lodged",{"_index":42,"title":{},"body":{"injectables/AccountService.html":{}}}],["log",{"_index":671,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":53,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["login",{"_index":58,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["login'},{'name",{"_index":236,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["login.component.html",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":235,"title":{"components/LoginComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginfailed",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":13,"title":{},"body":{"injectables/AccountService.html":{}}}],["loginuser(email",{"_index":69,"title":{},"body":{"injectables/AccountService.html":{}}}],["make",{"_index":695,"title":{},"body":{"modules/MaterialModule.html":{}}}],["manage",{"_index":1026,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["margin",{"_index":205,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["mat",{"_index":584,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["mat_dialog_data",{"_index":186,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{}}}],["matautocompletemodule",{"_index":713,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodule",{"_index":709,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodule",{"_index":742,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodule",{"_index":382,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"modules/MaterialModule.html":{}}}],["match",{"_index":455,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/RegisterComponent.html":{}}}],["match.validator",{"_index":990,"title":{},"body":{"components/RegisterComponent.html":{}}}],["match.validator.ts",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matcheckboxmodule",{"_index":707,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matching",{"_index":147,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchipsmodule",{"_index":743,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcommonmodule",{"_index":764,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodule",{"_index":715,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialog",{"_index":396,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["matdialogmodule",{"_index":752,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogref",{"_index":176,"title":{},"body":{"components/AddNotebookComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"components/GlobalConfirmComponent.html":{}}}],["material",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["material/material/material.module",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["materialmodule",{"_index":288,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"index.html":{},"modules.html":{}}}],["matexpansionmodule",{"_index":380,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"modules/MaterialModule.html":{}}}],["matformfieldmodule",{"_index":717,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodule",{"_index":735,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodule",{"_index":745,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodule",{"_index":711,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodule",{"_index":733,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodule",{"_index":728,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodule",{"_index":761,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodule",{"_index":750,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodule",{"_index":747,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodule",{"_index":719,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodule",{"_index":721,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenav",{"_index":394,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["matsidenavmodule",{"_index":730,"title":{},"body":{"modules/MaterialModule.html":{},"components/NotesPanelComponent.html":{}}}],["matslidermodule",{"_index":723,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodule",{"_index":725,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodule",{"_index":755,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodule",{"_index":759,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodule",{"_index":738,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodule",{"_index":757,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodule",{"_index":740,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodule",{"_index":731,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodule",{"_index":753,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattree",{"_index":384,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["mattreeflatdatasource",{"_index":385,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":429,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["mattreeflattener",{"_index":386,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["mattreeflattener(this._transformer",{"_index":427,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["mattreemodule",{"_index":763,"title":{},"body":{"modules/MaterialModule.html":{}}}],["max",{"_index":676,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["md",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mdbbootstrapmodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["mdbbootstrapmodule.forroot",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["measurementid",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":580,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["message",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalErrorComponent.html":{},"injectables/MessagingService.html":{}}}],["messages",{"_index":620,"title":{},"body":{"components/GlobalErrorComponent.html":{}}}],["messaging",{"_index":789,"title":{},"body":{"injectables/MessagingService.html":{}}}],["messagingsenderid",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messagingservice",{"_index":256,"title":{"injectables/MessagingService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/MessagingService.html":{},"coverage.html":{},"index.html":{}}}],["metadata",{"_index":161,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["miscellaneous",{"_index":1113,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modal",{"_index":618,"title":{},"body":{"components/GlobalErrorComponent.html":{}}}],["model",{"_index":1032,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["module",{"_index":274,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"index.html":{}}}],["modules",{"_index":276,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{},"index.html":{},"modules.html":{}}}],["moller",{"_index":923,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["move",{"_index":649,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["mustmatch",{"_index":989,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustmatch('password",{"_index":992,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mustmatch(controlname",{"_index":1116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["name",{"_index":26,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["name?:string",{"_index":1037,"title":{},"body":{"interfaces/User.html":{}}}],["navigate",{"_index":145,"title":{},"body":{"injectables/AccountService.html":{}}}],["nbsp",{"_index":1005,"title":{},"body":{"components/RegisterComponent.html":{}}}],["necessary",{"_index":813,"title":{},"body":{"injectables/MessagingService.html":{}}}],["needed",{"_index":110,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["new",{"_index":101,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/MessagingService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":587,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["ngmodule",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/MaterialModule.html":{}}}],["ngondestroy",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ngoninit",{"_index":173,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["node",{"_index":411,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["node.children",{"_index":415,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["node.children.length",{"_index":416,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["node.expandable",{"_index":425,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["node.id",{"_index":419,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["node.level",{"_index":424,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["node.name",{"_index":418,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["node_modules/@angular/common",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["none",{"_index":577,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["notebook",{"_index":56,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{}}}],["notebook'},{'name",{"_index":216,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["notebook.component",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"components/NotesPanelComponent.html":{}}}],["notebook.component.html",{"_index":168,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{}}}],["notebook.component.scss",{"_index":166,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{}}}],["notebook.component.ts",{"_index":158,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["notebook.component.ts:20",{"_index":178,"title":{},"body":{"components/AddNotebookComponent.html":{}}}],["notebook.component.ts:22",{"_index":185,"title":{},"body":{"components/AddNotebookComponent.html":{}}}],["notebook.component.ts:23",{"_index":184,"title":{},"body":{"components/AddNotebookComponent.html":{}}}],["notebook.component.ts:25",{"_index":179,"title":{},"body":{"components/AddNotebookComponent.html":{}}}],["notebook.component.ts:28",{"_index":181,"title":{},"body":{"components/AddNotebookComponent.html":{}}}],["notebook.description",{"_index":931,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["notebook.title",{"_index":930,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["notebook/add",{"_index":157,"title":{},"body":{"components/AddNotebookComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"components/NotesPanelComponent.html":{},"coverage.html":{}}}],["notebook/confirm",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["notebook/edit",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["notebook/notebook.component",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notebookcomponent",{"_index":237,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["notebookdto",{"_index":852,"title":{"classes/NotebookDto.html":{}},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"coverage.html":{}}}],["notebookid",{"_index":870,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["notebooks",{"_index":445,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["notebookservice",{"_index":391,"title":{"injectables/NotebookService.html":{}},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"coverage.html":{}}}],["notes",{"_index":239,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["notespanelcomponent",{"_index":238,"title":{"components/NotesPanelComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["notify",{"_index":841,"title":{},"body":{"injectables/MessagingService.html":{}}}],["number",{"_index":413,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["object",{"_index":50,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":46,"title":{},"body":{"injectables/AccountService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"injectables/ProfileService.html":{}}}],["observersmodule",{"_index":770,"title":{},"body":{"modules/MaterialModule.html":{}}}],["occurred",{"_index":829,"title":{},"body":{"injectables/MessagingService.html":{}}}],["ok",{"_index":198,"title":{},"body":{"components/AddNotebookComponent.html":{}}}],["one",{"_index":449,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{}}}],["oninit",{"_index":160,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["onnoclick",{"_index":174,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{}}}],["onsubmit",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["open",{"_index":402,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["openedclosetoggle",{"_index":503,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["opennotebook",{"_index":892,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["opennotebook(id",{"_index":897,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["opennotebookpanel",{"_index":504,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["openpanelbtn",{"_index":537,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["opentree",{"_index":505,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["optional",{"_index":28,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":98,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["order",{"_index":699,"title":{},"body":{"modules/MaterialModule.html":{}}}],["out",{"_index":80,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"components/NotesPanelComponent.html":{},"index.html":{}}}],["overflow",{"_index":561,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["overlaymodule",{"_index":772,"title":{},"body":{"modules/MaterialModule.html":{}}}],["overview",{"_index":1119,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":1075,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":574,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["page",{"_index":57,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["panel",{"_index":247,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["panel'},{'name",{"_index":227,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["panel.component",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["panel.component.html",{"_index":397,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["panel.component.scss",{"_index":398,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["panel.component.ts",{"_index":375,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:102",{"_index":511,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:12",{"_index":1010,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["panel.component.ts:129",{"_index":512,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:132",{"_index":514,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:15",{"_index":1011,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["panel.component.ts:18",{"_index":904,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["panel.component.ts:19",{"_index":899,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["panel.component.ts:20",{"_index":900,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["panel.component.ts:21",{"_index":901,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["panel.component.ts:22",{"_index":902,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["panel.component.ts:23",{"_index":527,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:24",{"_index":523,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:25",{"_index":521,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["panel.component.ts:27",{"_index":528,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["panel.component.ts:28",{"_index":516,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:29",{"_index":519,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["panel.component.ts:30",{"_index":518,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:31",{"_index":520,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["panel.component.ts:32",{"_index":524,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:33",{"_index":530,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:35",{"_index":522,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["panel.component.ts:36",{"_index":529,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":515,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":896,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["panel.component.ts:49",{"_index":525,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:50",{"_index":526,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:51",{"_index":517,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:52",{"_index":508,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["panel.component.ts:62",{"_index":510,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:75",{"_index":509,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel.component.ts:8",{"_index":1009,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["panel.component.ts:85",{"_index":898,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["panel.component.ts:91",{"_index":895,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["panel.component.ts:97",{"_index":513,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["panel/folder",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"coverage.html":{}}}],["panel/notes",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"coverage.html":{}}}],["panel/smart",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{}}}],["panelcontent",{"_index":564,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["panelopenstate",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["paragraph",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":113,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["parameter",{"_index":958,"title":{},"body":{"injectables/ProfileService.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":32,"title":{},"body":{"injectables/AccountService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{}}}],["password'},{'name",{"_index":229,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["password).subscribe(data",{"_index":663,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password.component",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.html",{"_index":594,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RestPasswordComponent.html":{}}}],["password.component.scss",{"_index":593,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RestPasswordComponent.html":{}}}],["password.component.ts",{"_index":592,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RestPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:12",{"_index":596,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RestPasswordComponent.html":{}}}],["password.component.ts:8",{"_index":595,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RestPasswordComponent.html":{}}}],["password/forgot",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/rest",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/RestPasswordComponent.html":{},"coverage.html":{}}}],["passwordconfirm",{"_index":75,"title":{},"body":{"injectables/AccountService.html":{},"components/RegisterComponent.html":{}}}],["passwords",{"_index":1006,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":846,"title":{},"body":{"injectables/MessagingService.html":{}}}],["permission",{"_index":822,"title":{},"body":{"injectables/MessagingService.html":{}}}],["phonenumber",{"_index":73,"title":{},"body":{"injectables/AccountService.html":{},"components/RegisterComponent.html":{}}}],["platformmodule",{"_index":774,"title":{},"body":{"modules/MaterialModule.html":{}}}],["please",{"_index":672,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["pointer",{"_index":944,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["populate",{"_index":458,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["popup",{"_index":188,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"components/NotesPanelComponent.html":{}}}],["portalmodule",{"_index":776,"title":{},"body":{"modules/MaterialModule.html":{}}}],["position",{"_index":538,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["private",{"_index":112,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{}}}],["production",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":401,"title":{},"body":{"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["profile'},{'name",{"_index":224,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["profile.component",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["profile.component.html",{"_index":486,"title":{},"body":{"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{}}}],["profile.component.scss",{"_index":485,"title":{},"body":{"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{}}}],["profile.component.ts",{"_index":484,"title":{},"body":{"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"coverage.html":{}}}],["profile.component.ts:23",{"_index":488,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":492,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:26",{"_index":491,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:28",{"_index":489,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":490,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["profile.service",{"_index":91,"title":{},"body":{"injectables/AccountService.html":{}}}],["profile/edit",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"coverage.html":{}}}],["profile_api",{"_index":966,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profileservice",{"_index":21,"title":{"injectables/ProfileService.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["program",{"_index":406,"title":{},"body":{"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["program?:string",{"_index":972,"title":{},"body":{"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["project",{"_index":939,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["projectid",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":68,"title":{},"body":{"injectables/AccountService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["properly",{"_index":700,"title":{},"body":{"modules/MaterialModule.html":{}}}],["properties",{"_index":169,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["provide",{"_index":673,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["providedin",{"_index":104,"title":{},"body":{"injectables/AccountService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"injectables/ProfileService.html":{}}}],["providers",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["public",{"_index":170,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"components/NotesPanelComponent.html":{}}}],["r1:the",{"_index":1024,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["r2:the",{"_index":1027,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["radius",{"_index":559,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["reactiveformsmodule",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":855,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["received",{"_index":848,"title":{},"body":{"injectables/MessagingService.html":{}}}],["receivemessage",{"_index":790,"title":{},"body":{"injectables/MessagingService.html":{}}}],["redirect",{"_index":55,"title":{},"body":{"injectables/AccountService.html":{}}}],["reduce",{"_index":703,"title":{},"body":{"modules/MaterialModule.html":{}}}],["register",{"_index":77,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":241,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["register.component.html",{"_index":979,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":978,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":240,"title":{"components/RegisterComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["registerfailed",{"_index":980,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerforgot",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{}}}],["registeruser",{"_index":14,"title":{},"body":{"injectables/AccountService.html":{},"components/RegisterComponent.html":{}}}],["registeruser(email",{"_index":72,"title":{},"body":{"injectables/AccountService.html":{}}}],["registration",{"_index":824,"title":{},"body":{"injectables/MessagingService.html":{}}}],["relative",{"_index":940,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["remove",{"_index":655,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["removenotebook",{"_index":879,"title":{},"body":{"injectables/NotebookService.html":{}}}],["removenotebook(notebookid",{"_index":875,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["request",{"_index":36,"title":{},"body":{"injectables/AccountService.html":{},"injectables/MessagingService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{}}}],["requestpermission",{"_index":791,"title":{},"body":{"injectables/MessagingService.html":{}}}],["required",{"_index":957,"title":{},"body":{"injectables/ProfileService.html":{}}}],["requirements",{"_index":1023,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["reset",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["responsetype",{"_index":118,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["rest",{"_index":243,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["restpasswordcomponent",{"_index":242,"title":{"components/RestPasswordComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["result",{"_index":49,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.bio).subscribe(data",{"_index":481,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["result.course",{"_index":913,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["result.department",{"_index":478,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["result.description",{"_index":915,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["result.institution",{"_index":477,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["result.name",{"_index":476,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["result.private",{"_index":918,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["result.program",{"_index":479,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["result.title",{"_index":911,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["result.workstatus",{"_index":480,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["results",{"_index":148,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieving",{"_index":830,"title":{},"body":{"injectables/MessagingService.html":{}}}],["return",{"_index":48,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{}}}],["returns",{"_index":45,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["rgba(255",{"_index":686,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["rgba(255,255,255,0.8",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["right",{"_index":542,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["root",{"_index":105,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"injectables/ProfileService.html":{}}}],["root'},{'name",{"_index":218,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["route",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["router",{"_index":20,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{}}}],["routermodule",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":359,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":357,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rtdb.europe",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["runs",{"_index":61,"title":{},"body":{"injectables/AccountService.html":{}}}],["rxjs",{"_index":88,"title":{},"body":{"injectables/AccountService.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"injectables/ProfileService.html":{},"dependencies.html":{}}}],["save",{"_index":502,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["science",{"_index":498,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["selector",{"_index":162,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["send",{"_index":34,"title":{},"body":{"injectables/AccountService.html":{},"injectables/MessagingService.html":{},"injectables/ProfileService.html":{}}}],["server",{"_index":811,"title":{},"body":{"injectables/MessagingService.html":{}}}],["serves",{"_index":109,"title":{},"body":{"injectables/AccountService.html":{}}}],["service",{"_index":453,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{}}}],["services/account.service",{"_index":642,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["services/messaging.service",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["services/notebook.service",{"_index":392,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["services/profile.service",{"_index":393,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/RegisterComponent.html":{}}}],["set",{"_index":126,"title":{},"body":{"injectables/AccountService.html":{}}}],["setup",{"_index":643,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["shadow",{"_index":576,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["shared",{"_index":96,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["short",{"_index":495,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["show",{"_index":619,"title":{},"body":{"components/GlobalErrorComponent.html":{},"injectables/MessagingService.html":{}}}],["sidenav",{"_index":589,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["sidenav.style.width",{"_index":1017,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["sidenav.toggle",{"_index":535,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["sidenav?.parentelement?.parentelement",{"_index":1015,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["sign",{"_index":79,"title":{},"body":{"injectables/AccountService.html":{}}}],["signed",{"_index":81,"title":{},"body":{"injectables/AccountService.html":{}}}],["signout",{"_index":116,"title":{},"body":{"injectables/AccountService.html":{}}}],["simple",{"_index":701,"title":{},"body":{"modules/MaterialModule.html":{}}}],["singout",{"_index":15,"title":{},"body":{"injectables/AccountService.html":{}}}],["size",{"_index":549,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["sliding",{"_index":905,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["small",{"_index":582,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["smart",{"_index":245,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["smartassistpanelcomponent",{"_index":244,"title":{"components/SmartAssistPanelComponent.html":{}},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["smartstudentnotebook",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["smartstudentnotebook.appspot.com",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smartstudentnotebook.firebaseapp.com",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solid",{"_index":557,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"modules/MaterialModule.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{},"interfaces/User.html":{}}}],["spinner",{"_index":749,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../account.service.ts",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../must",{"_index":1115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../profile.service.ts",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":261,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/account/forgot",{"_index":591,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/account/login/login.component.ts",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/account/login/login.component.ts:13",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/account/login/login.component.ts:14",{"_index":640,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/account/login/login.component.ts:15",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/account/login/login.component.ts:26",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/account/login/login.component.ts:34",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/account/login/login.component.ts:40",{"_index":637,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/account/register/must",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/account/register/register.component.ts",{"_index":977,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/account/register/register.component.ts:15",{"_index":986,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/account/register/register.component.ts:16",{"_index":987,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/account/register/register.component.ts:17",{"_index":988,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/account/register/register.component.ts:18",{"_index":982,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/account/register/register.component.ts:34",{"_index":984,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/account/register/register.component.ts:42",{"_index":983,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/account/register/register.component.ts:48",{"_index":985,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/account/reset",{"_index":1007,"title":{},"body":{"components/RestPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/modals/global/global",{"_index":598,"title":{},"body":{"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"coverage.html":{}}}],["src/app/components/panels/folder",{"_index":374,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"coverage.html":{}}}],["src/app/components/panels/notes",{"_index":889,"title":{},"body":{"components/NotesPanelComponent.html":{},"coverage.html":{}}}],["src/app/components/panels/smart",{"_index":1008,"title":{},"body":{"components/SmartAssistPanelComponent.html":{},"coverage.html":{}}}],["src/app/interfaces/user.ts",{"_index":1035,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/material/material/material.module.ts",{"_index":690,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/notebook/add",{"_index":156,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["src/app/notebook/confirm",{"_index":360,"title":{},"body":{"components/ConfirmDeleteComponent.html":{},"coverage.html":{}}}],["src/app/notebook/edit",{"_index":483,"title":{},"body":{"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"coverage.html":{}}}],["src/app/notebook/notebook.component.ts",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["src/app/services/account.service.ts",{"_index":6,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/account.service.ts:17",{"_index":23,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account.service.ts:30",{"_index":76,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account.service.ts:45",{"_index":70,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account.service.ts:60",{"_index":83,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account.service.ts:73",{"_index":78,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account.service.ts:80",{"_index":47,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account.service.ts:89",{"_index":33,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/account.service.ts:99",{"_index":51,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/services/messaging.service.ts",{"_index":787,"title":{},"body":{"injectables/MessagingService.html":{},"coverage.html":{}}}],["src/app/services/messaging.service.ts:10",{"_index":802,"title":{},"body":{"injectables/MessagingService.html":{}}}],["src/app/services/messaging.service.ts:11",{"_index":795,"title":{},"body":{"injectables/MessagingService.html":{}}}],["src/app/services/messaging.service.ts:47",{"_index":797,"title":{},"body":{"injectables/MessagingService.html":{}}}],["src/app/services/messaging.service.ts:60",{"_index":796,"title":{},"body":{"injectables/MessagingService.html":{}}}],["src/app/services/messaging.service.ts:75",{"_index":799,"title":{},"body":{"injectables/MessagingService.html":{}}}],["src/app/services/notebook.service.ts",{"_index":854,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"coverage.html":{}}}],["src/app/services/notebook.service.ts:12",{"_index":885,"title":{},"body":{"injectables/NotebookService.html":{}}}],["src/app/services/notebook.service.ts:17",{"_index":884,"title":{},"body":{"injectables/NotebookService.html":{}}}],["src/app/services/notebook.service.ts:22",{"_index":883,"title":{},"body":{"injectables/NotebookService.html":{}}}],["src/app/services/notebook.service.ts:30",{"_index":888,"title":{},"body":{"injectables/NotebookService.html":{}}}],["src/app/services/notebook.service.ts:37",{"_index":887,"title":{},"body":{"injectables/NotebookService.html":{}}}],["src/app/services/notebook.service.ts:44",{"_index":858,"title":{},"body":{"classes/NotebookDto.html":{}}}],["src/app/services/notebook.service.ts:45",{"_index":859,"title":{},"body":{"classes/NotebookDto.html":{}}}],["src/app/services/notebook.service.ts:46",{"_index":860,"title":{},"body":{"classes/NotebookDto.html":{}}}],["src/app/services/notebook.service.ts:47",{"_index":861,"title":{},"body":{"classes/NotebookDto.html":{}}}],["src/app/services/notebook.service.ts:48",{"_index":862,"title":{},"body":{"classes/NotebookDto.html":{}}}],["src/app/services/notebook.service.ts:49",{"_index":864,"title":{},"body":{"classes/NotebookDto.html":{}}}],["src/app/services/notebook.service.ts:50",{"_index":863,"title":{},"body":{"classes/NotebookDto.html":{}}}],["src/app/services/notebook.service.ts:51",{"_index":865,"title":{},"body":{"classes/NotebookDto.html":{}}}],["src/app/services/notebook.service.ts:8",{"_index":882,"title":{},"body":{"injectables/NotebookService.html":{}}}],["src/app/services/profile.service.ts",{"_index":950,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/profile.service.ts:16",{"_index":952,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:24",{"_index":963,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:40",{"_index":955,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:65",{"_index":965,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/environments/environment.prod.ts",{"_index":1071,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srs",{"_index":935,"title":{},"body":{"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["statements",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":501,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["storage",{"_index":64,"title":{},"body":{"injectables/AccountService.html":{}}}],["storagebucket",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":31,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":376,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["student",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["study",{"_index":493,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["studying",{"_index":499,"title":{},"body":{"components/EditProfileComponent.html":{}}}],["styles",{"_index":153,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["styleurls",{"_index":165,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["submits",{"_index":656,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitted",{"_index":981,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe(res",{"_index":820,"title":{},"body":{"injectables/MessagingService.html":{}}}],["subscribe(result",{"_index":448,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["subscribetotopic",{"_index":792,"title":{},"body":{"injectables/MessagingService.html":{}}}],["subscribetotopic(currenttoken",{"_index":798,"title":{},"body":{"injectables/MessagingService.html":{}}}],["subtitle",{"_index":581,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["successful",{"_index":664,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["support",{"_index":1122,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":370,"title":{},"body":{"components/ConfirmDeleteComponent.html":{},"components/GlobalConfirmComponent.html":{}}}],["surname",{"_index":857,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{}}}],["svg",{"_index":1123,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1025,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["table",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":1029,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["take",{"_index":139,"title":{},"body":{"injectables/AccountService.html":{},"components/RegisterComponent.html":{}}}],["telephone",{"_index":1003,"title":{},"body":{"components/RegisterComponent.html":{}}}],["template",{"_index":152,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["templateurl",{"_index":167,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["text",{"_index":680,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["then((currenttoken",{"_index":809,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.accountservice.isuserloggedin",{"_index":651,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.accountservice.loginuser(email",{"_index":662,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.accountservice.registeruser(email,phonenumber,displayname,password,passwordconfirm).subscribe(data",{"_index":998,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.angularfiremessaging.messages.subscribe",{"_index":845,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.angularfiremessaging.messaging.subscribe",{"_index":831,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.angularfiremessaging.requesttoken.subscribe",{"_index":838,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.bio",{"_index":441,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["this.course",{"_index":912,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["this.currentmessage.next(payload",{"_index":844,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.data.error",{"_index":617,"title":{},"body":{"components/GlobalErrorComponent.html":{}}}],["this.description",{"_index":914,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["this.dialog.open(addnotebookcomponent",{"_index":919,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["this.dialog.open(editprofilecomponent",{"_index":461,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["this.dialogref.close",{"_index":196,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DialogData.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{}}}],["this.dialogref.close(false",{"_index":369,"title":{},"body":{"components/ConfirmDeleteComponent.html":{},"components/GlobalConfirmComponent.html":{}}}],["this.dialogref.close(true",{"_index":368,"title":{},"body":{"components/ConfirmDeleteComponent.html":{},"components/GlobalConfirmComponent.html":{}}}],["this.errormessage",{"_index":669,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.fb.group",{"_index":646,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.form",{"_index":645,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.form.get('displayname')?.value",{"_index":996,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.form.get('email')?.value",{"_index":660,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.form.get('password')?.value",{"_index":661,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.form.get('passwordconfirm')?.value",{"_index":997,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.form.valid",{"_index":659,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getcurrentuser().subscribe(data",{"_index":130,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.getusernotebooks",{"_index":443,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["this.http.delete(account_api",{"_index":120,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.http.get(account_api",{"_index":117,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.http.get(profile_api",{"_index":968,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.http.post(account_api",{"_index":114,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.http.post(profile_api",{"_index":976,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.http.put(account_api",{"_index":115,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.httpclient.request('delete','http://localhost:5001/notebook/deletenotebook",{"_index":876,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["this.httpclient.request('get','http://localhost:5001/notebook/findallusernotebooks",{"_index":867,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["this.httpclient.request('get','http://localhost:5001/notebook/findnotebookbyid",{"_index":869,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["this.httpclient.request('post','http://localhost:5001/notebook/createnotebook",{"_index":872,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["this.httpclient.request('post','http://localhost:5001/notification/subscribetotopic",{"_index":849,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.httpclient.request('put','http://localhost:5001/notebook/updatenotebook",{"_index":874,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["this.institution",{"_index":916,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["this.loginfailed",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.message",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messaging",{"_index":804,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.messaging.gettoken({vapidkey",{"_index":806,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.messaging.onmessage",{"_index":815,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.messaging.onmessage((payload",{"_index":842,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.messaging.onmessage.bind(this.messaging",{"_index":816,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.messaging.ontokenrefresh",{"_index":817,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.messaging.ontokenrefresh.bind(this.messaging",{"_index":818,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.messaging.requestpermission",{"_index":837,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.messagingservice.currentmessage",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messagingservice.receivemessage",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["this.messagingservice.requestpermission",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["this.notebooks",{"_index":906,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["this.notebookservice.getusernotebooks('zsm6cotjuavmuynicgd5qciqngl2",{"_index":907,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["this.notebookservice.getusernotebooks(this.user.uid",{"_index":447,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["this.notebookservice.updatenotebook(request",{"_index":925,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["this.private",{"_index":917,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["this.profile",{"_index":437,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["this.profile.userinfo.bio",{"_index":442,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["this.profileservice.createuser(data.uid,data.displayname",{"_index":1001,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.profileservice.getuserdetails(data.uid).subscribe(user",{"_index":132,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.profileservice.getuserdetails(user.uid).subscribe(data",{"_index":457,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["this.profileservice.updateuser(user.uid",{"_index":475,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["this.registerfailed",{"_index":993,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigatebyurl(`/login",{"_index":146,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.router.navigatebyurl(`/notebook",{"_index":142,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.router.navigatebyurl(`notebook",{"_index":667,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":122,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.submitted",{"_index":994,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.subscribetotopic(currenttoken",{"_index":819,"title":{},"body":{"injectables/MessagingService.html":{}}}],["this.title",{"_index":910,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["this.treeflattener",{"_index":430,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["this.user",{"_index":435,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["this.user.displayname",{"_index":440,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["this.username",{"_index":439,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["time",{"_index":59,"title":{},"body":{"injectables/AccountService.html":{},"modules/MaterialModule.html":{}}}],["title",{"_index":190,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/NotesPanelComponent.html":{}}}],["todo",{"_index":123,"title":{},"body":{"injectables/AccountService.html":{}}}],["toggle",{"_index":727,"title":{},"body":{"modules/MaterialModule.html":{}}}],["token",{"_index":810,"title":{},"body":{"injectables/MessagingService.html":{}}}],["top",{"_index":540,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["topic",{"_index":850,"title":{},"body":{"injectables/MessagingService.html":{}}}],["totheir",{"_index":1030,"title":{},"body":{"components/SmartAssistPanelComponent.html":{}}}],["transition",{"_index":543,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["transparent",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["tree",{"_index":155,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["treecontrol",{"_index":422,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["treecontrol.isexpanded(node",{"_index":532,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["treeflattener",{"_index":426,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["treenode",{"_index":590,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["true",{"_index":668,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["tune",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":27,"title":{},"body":{"injectables/AccountService.html":{},"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type':'application/json",{"_index":970,"title":{},"body":{"injectables/ProfileService.html":{}}}],["ui",{"_index":812,"title":{},"body":{"injectables/MessagingService.html":{}}}],["uid",{"_index":456,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["uid:string",{"_index":1036,"title":{},"body":{"interfaces/User.html":{}}}],["undefined",{"_index":921,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["up",{"_index":65,"title":{},"body":{"injectables/AccountService.html":{}}}],["update",{"_index":62,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/MessagingService.html":{},"injectables/ProfileService.html":{}}}],["updatenotebook",{"_index":880,"title":{},"body":{"injectables/NotebookService.html":{}}}],["updatenotebook(notebookdto",{"_index":873,"title":{},"body":{"classes/NotebookDto.html":{},"injectables/NotebookService.html":{}}}],["updateprofile",{"_index":506,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["updateuser",{"_index":16,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["updateuser(email",{"_index":82,"title":{},"body":{"injectables/AccountService.html":{}}}],["updateuser(uid",{"_index":964,"title":{},"body":{"injectables/ProfileService.html":{}}}],["url",{"_index":92,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ProfileService.html":{}}}],["url(\"../../../../assets/images/defaultprofile.jpg",{"_index":571,"title":{},"body":{"components/FolderPanelComponent.html":{}}}],["url('https://material.angular.io/assets/img/examples/shiba1.jpg",{"_index":941,"title":{},"body":{"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["use",{"_index":696,"title":{},"body":{"modules/MaterialModule.html":{}}}],["used",{"_index":606,"title":{},"body":{"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{}}}],["user",{"_index":43,"title":{"interfaces/User.html":{}},"body":{"injectables/AccountService.html":{},"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user's",{"_index":444,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["userarno",{"_index":924,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["userdetails",{"_index":128,"title":{},"body":{"injectables/AccountService.html":{}}}],["userid",{"_index":886,"title":{},"body":{"injectables/NotebookService.html":{},"injectables/ProfileService.html":{}}}],["username",{"_index":403,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"classes/NotebookDto.html":{},"injectables/NotebookService.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["userprofile",{"_index":131,"title":{},"body":{"injectables/AccountService.html":{}}}],["users",{"_index":454,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/GlobalConfirmComponent.html":{},"injectables/ProfileService.html":{},"components/SmartAssistPanelComponent.html":{}}}],["valid",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":644,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validator",{"_index":991,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":641,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":647,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":648,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":125,"title":{},"body":{"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/FolderPanelComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":474,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/RegisterComponent.html":{}}}],["var",{"_index":214,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"components/EditProfileComponent.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["variable",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":420,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["variant",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["view",{"_index":421,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["viewchild",{"_index":379,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{}}}],["viewchild('sidenav",{"_index":903,"title":{},"body":{"components/NotesPanelComponent.html":{}}}],["viewencapsulation",{"_index":390,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["viewencapsulation.none",{"_index":400,"title":{},"body":{"interfaces/DirectoryNode.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{}}}],["void",{"_index":180,"title":{},"body":{"components/AddNotebookComponent.html":{},"components/AppComponent.html":{},"components/ConfirmDeleteComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GlobalConfirmComponent.html":{},"components/GlobalErrorComponent.html":{},"components/LoginComponent.html":{},"injectables/MessagingService.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/RestPasswordComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["want",{"_index":371,"title":{},"body":{"components/ConfirmDeleteComponent.html":{},"modules/MaterialModule.html":{},"injectables/ProfileService.html":{}}}],["weight",{"_index":945,"title":{},"body":{"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["west1.firebasedatabase.app",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["width",{"_index":201,"title":{},"body":{"components/AddNotebookComponent.html":{},"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"components/LoginComponent.html":{},"components/NotesPanelComponent.html":{},"components/RegisterComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["work",{"_index":500,"title":{},"body":{"components/EditProfileComponent.html":{},"modules/MaterialModule.html":{}}}],["works",{"_index":597,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RestPasswordComponent.html":{}}}],["workstatus",{"_index":407,"title":{},"body":{"interfaces/DirectoryNode.html":{},"components/EditProfileComponent.html":{},"interfaces/EditProfileDialogData.html":{},"interfaces/ExampleFlatNode.html":{},"components/FolderPanelComponent.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["workstatus?:string",{"_index":973,"title":{},"body":{"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["ydrcwdt5qj",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":608,"title":{},"body":{"components/GlobalConfirmComponent.html":{},"injectables/ProfileService.html":{}}}],["z",{"_index":546,"title":{},"body":{"components/FolderPanelComponent.html":{},"components/NotesPanelComponent.html":{},"components/SmartAssistPanelComponent.html":{}}}],["zone.js",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/account.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                    Async\n                                isUserLoggedIn\n                            \n                            \n                                loginUser\n                            \n                            \n                                registerUser\n                            \n                            \n                                singOut\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/account.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteUser(EmailAddress: string, Password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account.service.ts:89\n                \n            \n\n\n            \n                \n                    Send a API request to the backend account endPoint to Delete the current Lodged in user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    EmailAddress\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account.service.ts:80\n                \n            \n\n\n            \n                \n                    Send a API request to the backend account endPoint to get the current Lodged in user and return the result (User Object)\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account.service.ts:99\n                \n            \n\n\n            \n                \n                    check if user is logged in\nif already logged in redirect them to the notebook page\nif the user is not logged in redirect them to the login page\nevery time the function runs update the local storage with most up to date information\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginUser\n                        \n                        \n                    \n                \n            \n            \n                \nloginUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account.service.ts:45\n                \n            \n\n\n            \n                \n                    Send a API request to the backend account endPoint to login a user and return the result (User Object)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \nregisterUser(email: string, phoneNumber: string, displayName: string, password: string, passwordConfirm: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account.service.ts:30\n                \n            \n\n\n            \n                \n                    Send a API request to the backend account endPoint to register a user and return the result (User Object)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    displayName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwordConfirm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            singOut\n                        \n                        \n                    \n                \n            \n            \n                \nsingOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account.service.ts:73\n                \n            \n\n\n            \n                \n                    Send a API request to the backend account endPoint to Sign out the current signed in in user\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(email: string, phoneNumber: string, displayName: string, password: string, passwordConfirm: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/account.service.ts:60\n                \n            \n\n\n            \n                \n                    Send a API request to the backend account endPoint to update a user and return the result (User Object)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phoneNumber\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    displayName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwordConfirm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProfileService } from './profile.service';\n\n//API URL for the account endpoint on the backend\nconst ACCOUNT_API = 'http://localhost:5001/account/';\n//Shared header options for API request\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  //inject serves needed\n  constructor(private http: HttpClient, private router: Router, private profileService: ProfileService) { }\n\n  /**\n   * Send a API request to the backend account endPoint to register a user and return the result (User Object)\n   * @param email\n   * @param phoneNumber\n   * @param displayName\n   * @param password\n   * @param passwordConfirm\n   */\n  registerUser(email: string, phoneNumber: string, displayName: string, password: string, passwordConfirm: string): Observable {\n    return this.http.post(ACCOUNT_API + 'registerUser', {\n      email,\n      phoneNumber,\n      displayName,\n      password,\n      passwordConfirm\n    }, httpOptions);\n  }\n\n  /**\n   * Send a API request to the backend account endPoint to login a user and return the result (User Object)\n   * @param email\n   * @param password\n   */\n  loginUser(email: string, password: string): Observable{\n    return this.http.post(ACCOUNT_API + 'loginUser', {\n      email,\n      password\n    }, httpOptions);\n  }\n\n  /**\n   * Send a API request to the backend account endPoint to update a user and return the result (User Object)\n   * @param email\n   * @param phoneNumber\n   * @param displayName\n   * @param password\n   * @param passwordConfirm\n   */\n  updateUser(email: string, phoneNumber: string, displayName: string, password: string, passwordConfirm: string): Observable{\n    return this.http.put(ACCOUNT_API + 'updateUser', {\n      email,\n      phoneNumber,\n      displayName,\n      password,\n      passwordConfirm\n    }, httpOptions);\n  }\n\n  /**\n   * Send a API request to the backend account endPoint to Sign out the current signed in in user\n   */\n  singOut(): Observable{\n    return this.http.post(ACCOUNT_API + 'signOut', {}, httpOptions);\n  }\n\n  /**\n   * Send a API request to the backend account endPoint to get the current Lodged in user and return the result (User Object)\n   */\n  getCurrentUser(): Observable {\n    return this.http.get(ACCOUNT_API + 'getCurrentUser', { responseType: 'json' });\n  }\n\n  /**\n   * Send a API request to the backend account endPoint to Delete the current Lodged in user\n   * @param EmailAddress\n   * @param Password\n   */\n  deleteUser(EmailAddress: string, Password: string): Observable{\n    return this.http.delete(ACCOUNT_API + 'deleteUser', {responseType: 'json'});\n  }\n\n  /**\n   * check if user is logged in\n   * if already logged in redirect them to the notebook page\n   * if the user is not logged in redirect them to the login page\n   * every time the function runs update the local storage with most up to date information\n   */\n  async isUserLoggedIn():  Promise{\n\n    let curentRoute = this.router.url.split('?')[0];\n\n    //TODO first check if the user value has been set in the localstorage...\n\n    //Get the current Lodged in userDetails, if fail then user is not logged in\n    this.getCurrentUser().subscribe(data => {\n\n      //update the LocalStorage for \"user\" and \"userProfile\"\n        this.profileService.getUserDetails(data.uid).subscribe(user =>{\n            localStorage.setItem(\"userProfile\",JSON.stringify(user));\n        },\n          err => {\n            console.log(\"Error: \"+err.error.message);\n          });\n\n        localStorage.setItem(\"user\",JSON.stringify(data));\n\n        //if the user is logged in and they are not in the login, register or forgot password then take them to the notebook page\n        if(curentRoute == \"/\" || curentRoute == \"/login\" || curentRoute == \"/register\" || curentRoute == \"/forgotPassword\")\n        {\n          this.router.navigateByUrl(`/notebook`);\n        }\n      },\n      err => {\n        console.log(err.error.message);\n        //if the user is not logged in allow them to navigate login, register and forgotPassword\n        if(curentRoute !== \"/\" && curentRoute !== \"/login\" && curentRoute !== \"/register\" && curentRoute !== \"/forgotPassword\")\n        {\n          this.router.navigateByUrl(`/login`);\n        }\n      }\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddNotebookComponent.html":{"url":"components/AddNotebookComponent.html","title":"component - AddNotebookComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddNotebookComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notebook/add-notebook/add-notebook.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-notebook\n            \n\n            \n                styleUrls\n                ./add-notebook.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-notebook.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/notebook/add-notebook/add-notebook.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notebook/add-notebook/add-notebook.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notebook/add-notebook/add-notebook.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/notebook/add-notebook/add-notebook.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notebook/add-notebook/add-notebook.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Data for the add notebook popup\n */\nexport interface DialogData {\n  title: string;\n  course: string;\n  description: string;\n  institution: string;\n  private: boolean;\n}\n\n@Component({\n  selector: 'app-add-notebook',\n  templateUrl: './add-notebook.component.html',\n  styleUrls: ['./add-notebook.component.scss']\n})\nexport class AddNotebookComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  Notebook title\n  \n  Notebook title\n\n\n\n  Course\n  \n  Course\n\n\n\n  Description\n  \n  Description\n\n\n\n  Institution\n  \n  Institution\n\n\n\n  Private\n\n\n\n  Cancel\n  Ok\n\n\n    \n\n    \n                \n                    ./add-notebook.component.scss\n                \n                .form-field{\n  width: 100%;\n  display: block;\n  margin-bottom: 15px;\n}\n\n#check{\n  margin: 15px 0px 10px 0px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Notebook title    Notebook title  Course    Course  Description    Description  Institution    Institution  Private  Cancel  Ok'\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddNotebookComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                panelOpenState\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messagingService: MessagingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messagingService\n                                                  \n                                                        \n                                                                        MessagingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panelOpenState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'smart-student'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MessagingService } from './services/messaging.service';\n// import * as firebase from \"firebase/database\";\nimport firebase from \"firebase\";\nimport {environment} from \"../environments/environment\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  panelOpenState = false;\n  title = 'smart-student';\n  message: any;\n\n  constructor(private messagingService: MessagingService) { }\n  ngOnInit() {\n    // firebase.initializeApp(environment.firebase);\n\n    this.messagingService.requestPermission();\n    this.messagingService.receiveMessage();\n    this.message = this.messagingService.currentMessage;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAddNotebookComponent\n\nAddNotebookComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddNotebookComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmDeleteComponent\n\nConfirmDeleteComponent\n\nAppModule -->\n\nConfirmDeleteComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nFolderPanelComponent\n\nFolderPanelComponent\n\nAppModule -->\n\nFolderPanelComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nGlobalConfirmComponent\n\nGlobalConfirmComponent\n\nAppModule -->\n\nGlobalConfirmComponent->AppModule\n\n\n\n\n\nGlobalErrorComponent\n\nGlobalErrorComponent\n\nAppModule -->\n\nGlobalErrorComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNotebookComponent\n\nNotebookComponent\n\nAppModule -->\n\nNotebookComponent->AppModule\n\n\n\n\n\nNotesPanelComponent\n\nNotesPanelComponent\n\nAppModule -->\n\nNotesPanelComponent->AppModule\n\n\n\nAppModule -->\n\nNotesPanelComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRestPasswordComponent\n\nRestPasswordComponent\n\nAppModule -->\n\nRestPasswordComponent->AppModule\n\n\n\n\n\nSmartAssistPanelComponent\n\nSmartAssistPanelComponent\n\nAppModule -->\n\nSmartAssistPanelComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nMessagingService\n\nMessagingService\n\nAppModule -->\n\nMessagingService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddNotebookComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ConfirmDeleteComponent\n                        \n                        \n                            EditProfileComponent\n                        \n                        \n                            FolderPanelComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            GlobalConfirmComponent\n                        \n                        \n                            GlobalErrorComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NotebookComponent\n                        \n                        \n                            NotesPanelComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RestPasswordComponent\n                        \n                        \n                            SmartAssistPanelComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            MessagingService\n                        \n                        \n                            NotesPanelComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MaterialModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n//Modules\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\n\n//Firebase\nimport { AngularFireMessagingModule } from '@angular/fire/messaging';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { MessagingService } from './services/messaging.service';\nimport { environment } from '../environments/environment';\nimport { AsyncPipe } from '../../node_modules/@angular/common';\n\n//Angular Material\nimport {MaterialModule} from './material/material/material.module';\n\n//Components\nimport { FolderPanelComponent } from './components/panels/folder-panel/folder-panel.component';\nimport { NotebookComponent } from './notebook/notebook.component';\nimport { SmartAssistPanelComponent } from './components/panels/smart-assist-panel/smart-assist-panel.component';\nimport { NotesPanelComponent } from './components/panels/notes-panel/notes-panel.component';\nimport { LoginComponent } from './components/account/login/login.component';\nimport { RegisterComponent } from './components/account/register/register.component';\nimport { RestPasswordComponent } from './components/account/reset-password/rest-password.component';\nimport { ForgotPasswordComponent } from './components/account/forgot-password/forgot-password.component';\nimport { GlobalErrorComponent } from './components/modals/global/global-error/global-error.component';\nimport { GlobalConfirmComponent } from './components/modals/global/global-confirm/global-confirm.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddNotebookComponent } from './notebook/add-notebook/add-notebook.component';\nimport { MatDialogRef } from \"@angular/material/dialog\";\nimport { ConfirmDeleteComponent } from './notebook/confirm-delete/confirm-delete.component';\nimport {EditProfileComponent} from \"./notebook/edit-profile/edit-profile.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FolderPanelComponent,\n    NotebookComponent,\n    SmartAssistPanelComponent,\n    NotesPanelComponent,\n    LoginComponent,\n    RegisterComponent,\n    RestPasswordComponent,\n    ForgotPasswordComponent,\n    GlobalErrorComponent,\n    GlobalConfirmComponent,\n    AddNotebookComponent,\n    ConfirmDeleteComponent,\n    EditProfileComponent\n  ],\n  imports: [\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MDBBootstrapModule.forRoot(),\n    AngularFireModule.initializeApp(environment.firebase, 'smartStudentNotebook'),\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n    AngularFireMessagingModule,\n    // AngularFireStorageModule,\n    AngularFirestoreModule,\n    HttpClientModule\n  ],\n  providers: [NotesPanelComponent, MessagingService, AsyncPipe, FolderPanelComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/account/login/login.component';\nimport { RegisterComponent } from './components/account/register/register.component';\nimport { ForgotPasswordComponent } from './components/account/forgot-password/forgot-password.component';\nimport { RestPasswordComponent } from './components/account/reset-password/rest-password.component';\nimport { NotebookComponent } from './notebook/notebook.component';\nimport {AddNotebookComponent} from \"./notebook/add-notebook/add-notebook.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'forgotPassword',\n    component: ForgotPasswordComponent\n  },\n  {\n    path: 'notebook',\n    component: NotebookComponent\n  },\n  {\n    path: 'add',\n    component: AddNotebookComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDeleteComponent.html":{"url":"components/ConfirmDeleteComponent.html","title":"component - ConfirmDeleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmDeleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notebook/confirm-delete/confirm-delete.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-delete\n            \n\n            \n                styleUrls\n                ./confirm-delete.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-delete.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Cancel\n                            \n                            \n                                Confirm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/notebook/confirm-delete/confirm-delete.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Cancel\n                        \n                        \n                    \n                \n            \n            \n                \nCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notebook/confirm-delete/confirm-delete.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Confirm\n                        \n                        \n                    \n                \n            \n            \n                \nConfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notebook/confirm-delete/confirm-delete.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notebook/confirm-delete/confirm-delete.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {MatDialogRef} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-confirm-delete',\n  templateUrl: './confirm-delete.component.html',\n  styleUrls: ['./confirm-delete.component.scss']\n})\nexport class ConfirmDeleteComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef) { }\n\n  ngOnInit(): void {\n  }\n\n  Confirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  Cancel(): void {\n    this.dialogRef.close(false);\n  }\n}\n\n    \n\n    \n        Confirm\n\n  \n    Are you sure you want to delete this notebook?\n  \n\n\n  Cancel\n  Delete\n\n\n    \n\n    \n                \n                    ./confirm-delete.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Confirm      Are you sure you want to delete this notebook?    Cancel  Delete'\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDeleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notebook/add-notebook/add-notebook.component.ts\n        \n\n            \n                Description\n            \n            \n                Data for the add notebook popup\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        course\n                                \n                                \n                                        description\n                                \n                                \n                                        institution\n                                \n                                \n                                        private\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                    \n                                \n                                \n                                    \n                                        course:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        institution\n                                    \n                                \n                                \n                                    \n                                        institution:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Data for the add notebook popup\n */\nexport interface DialogData {\n  title: string;\n  course: string;\n  description: string;\n  institution: string;\n  private: boolean;\n}\n\n@Component({\n  selector: 'app-add-notebook',\n  templateUrl: './add-notebook.component.html',\n  styleUrls: ['./add-notebook.component.scss']\n})\nexport class AddNotebookComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirectoryNode.html":{"url":"interfaces/DirectoryNode.html","title":"interface - DirectoryNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DirectoryNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/panels/folder-panel/folder-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Tree structure\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        children\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        children\n                                    \n                                \n                                \n                                    \n                                        children:         DirectoryNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DirectoryNode[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotesPanelComponent } from '../notes-panel/notes-panel.component';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTree, MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport { ViewEncapsulation } from '@angular/core';\nimport {NotebookService} from \"../../../services/notebook.service\";\nimport {Router} from \"@angular/router\";\nimport {ProfileService} from \"../../../services/profile.service\";\nimport {MatSidenav} from \"@angular/material/sidenav\";\nimport {EditProfileComponent} from \"../../../notebook/edit-profile/edit-profile.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-folder-panel',\n  templateUrl: './folder-panel.component.html',\n  styleUrls: ['./folder-panel.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FolderPanelComponent implements OnInit {\n\n  user: any;\n  profile: any;\n  open: boolean = false;\n\n  username: string = '';\n  bio: string = '';\n  institution: string = '';\n  department: string = '';\n  name: string = '';\n  program: string = '';\n  workstatus: string = '';\n\n  panelOpenState = false;\n  width = 68.3;\n\n  //-----------------  Code needed for the tree  ----------------------------------\n  private _transformer = (node: DirectoryNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      id: node.id,\n      level: level,\n    };\n  }\n\n  //Variables needed for the tree view\n  treeControl = new FlatTreeControl(node => node.level, node => node.expandable);\n  treeFlattener = new MatTreeFlattener(this._transformer, node => node.level, node => node.expandable, node => node.children);\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  //--------------------------------------------------------------------------------\n\n\n  constructor(private panel: NotesPanelComponent, private notebookService: NotebookService,\n              private router: Router, private profileService: ProfileService,\n              private dialog: MatDialog) { }\n\n\n  ngOnInit(): void {\n\n    //Get the user and user profile info from localstorage\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.profile = JSON.parse(localStorage.getItem('userProfile'));\n\n    this.username = this.user.displayName;\n    this.bio = this.profile.userInfo.bio;\n\n    this.getUserNotebooks();\n  }\n\n  //Get the logged in user's notebooks\n  getUserNotebooks(){\n\n    this.notebookService.getUserNotebooks(this.user.uid)\n      .subscribe(result => {\n\n        let children = [{name: 'Notebook one', id: ''}];\n        // for (let i = 0; i localStorage.getItem('user'));\n\n    //Call the getUserDetails from the profile service to get the users profile information that match that uid\n    this.profileService.getUserDetails(user.uid).subscribe(data => {\n\n       //Open dialog and populate the data attributes of the form fields\n        const dialogRef = this.dialog.open(EditProfileComponent, {\n          width: '50%',\n          data: {\n            bio: data.userInfo.bio,\n            department: data.userInfo.department,\n            name: data.userInfo.name,\n            institution: data.userInfo.institution,\n            program: data.userInfo.program,\n            workstatus: data.userInfo.workStatus\n          }\n        });\n\n        //Get info and create notebook after dialog is closed\n        dialogRef.afterClosed().subscribe(result => {\n\n          //update the user profile information based on the entered values in the form\n          this.profileService.updateUser(user.uid, result.name, result.institution, result.department, result.program, result.workstatus, result.bio).subscribe(data => {\n            },\n            err => {\n              console.log(\"Error: \"+err.error.message);\n            }\n          );\n\n        });\n\n      },\n      err => {\n        console.log(\"Error: \"+err.error.message);\n      }\n    );\n\n  }\n}\n\n\n/**\n * Tree structure\n */\n interface DirectoryNode {\n  name: string;\n  id: string;\n  children?: DirectoryNode[];\n}\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  id: string;\n  level: number;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileComponent.html":{"url":"components/EditProfileComponent.html","title":"component - EditProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/notebook/edit-profile/edit-profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile\n            \n\n            \n                styleUrls\n                ./edit-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: EditProfileDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/notebook/edit-profile/edit-profile.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        EditProfileDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notebook/edit-profile/edit-profile.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/notebook/edit-profile/edit-profile.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EditProfileDialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/notebook/edit-profile/edit-profile.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/notebook/edit-profile/edit-profile.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {DialogData} from \"../add-notebook/add-notebook.component\";\n\n\n/**\n * Data for the add notebook popup\n */\nexport interface EditProfileDialogData {\n  bio: string;\n  department: string;\n  name: string;\n  institution: string;\n  program: string;\n  workstatus: string;\n}\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: EditProfileDialogData) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n    \n\n    \n        Update Profile\n\n\n  Name\n  \n  Your Name\n\n\n\n  Institution\n  \n  The institution where you study\n\n\n\n  Biography\n  \n  A short biography\n\n\n\n  Department\n  \n  Your department, ex: Computer science\n\n\n\n  Program\n  \n  The program that you are studying\n\n\n\n  Work Status\n  \n  Your work status\n\n\n\n\n  Cancel\n  Save\n\n\n    \n\n    \n                \n                    ./edit-profile.component.scss\n                \n                .form-field{\n  width: 100%;\n  display: block;\n  margin-bottom: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Update Profile  Name    Your Name  Institution    The institution where you study  Biography    A short biography  Department    Your department, ex: Computer science  Program    The program that you are studying  Work Status    Your work status  Cancel  Save'\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EditProfileDialogData.html":{"url":"interfaces/EditProfileDialogData.html","title":"interface - EditProfileDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EditProfileDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/notebook/edit-profile/edit-profile.component.ts\n        \n\n            \n                Description\n            \n            \n                Data for the add notebook popup\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bio\n                                \n                                \n                                        department\n                                \n                                \n                                        institution\n                                \n                                \n                                        name\n                                \n                                \n                                        program\n                                \n                                \n                                        workstatus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        department\n                                    \n                                \n                                \n                                    \n                                        department:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        institution\n                                    \n                                \n                                \n                                    \n                                        institution:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        program\n                                    \n                                \n                                \n                                    \n                                        program:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workstatus\n                                    \n                                \n                                \n                                    \n                                        workstatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {DialogData} from \"../add-notebook/add-notebook.component\";\n\n\n/**\n * Data for the add notebook popup\n */\nexport interface EditProfileDialogData {\n  bio: string;\n  department: string;\n  name: string;\n  institution: string;\n  program: string;\n  workstatus: string;\n}\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss']\n})\nexport class EditProfileComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: EditProfileDialogData) { }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExampleFlatNode.html":{"url":"interfaces/ExampleFlatNode.html","title":"interface - ExampleFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ExampleFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/panels/folder-panel/folder-panel.component.ts\n        \n\n            \n                Description\n            \n            \n                Flat node with expandable and level information \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expandable\n                                \n                                \n                                        id\n                                \n                                \n                                        level\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expandable\n                                    \n                                \n                                \n                                    \n                                        expandable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotesPanelComponent } from '../notes-panel/notes-panel.component';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTree, MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport { ViewEncapsulation } from '@angular/core';\nimport {NotebookService} from \"../../../services/notebook.service\";\nimport {Router} from \"@angular/router\";\nimport {ProfileService} from \"../../../services/profile.service\";\nimport {MatSidenav} from \"@angular/material/sidenav\";\nimport {EditProfileComponent} from \"../../../notebook/edit-profile/edit-profile.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-folder-panel',\n  templateUrl: './folder-panel.component.html',\n  styleUrls: ['./folder-panel.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FolderPanelComponent implements OnInit {\n\n  user: any;\n  profile: any;\n  open: boolean = false;\n\n  username: string = '';\n  bio: string = '';\n  institution: string = '';\n  department: string = '';\n  name: string = '';\n  program: string = '';\n  workstatus: string = '';\n\n  panelOpenState = false;\n  width = 68.3;\n\n  //-----------------  Code needed for the tree  ----------------------------------\n  private _transformer = (node: DirectoryNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      id: node.id,\n      level: level,\n    };\n  }\n\n  //Variables needed for the tree view\n  treeControl = new FlatTreeControl(node => node.level, node => node.expandable);\n  treeFlattener = new MatTreeFlattener(this._transformer, node => node.level, node => node.expandable, node => node.children);\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  //--------------------------------------------------------------------------------\n\n\n  constructor(private panel: NotesPanelComponent, private notebookService: NotebookService,\n              private router: Router, private profileService: ProfileService,\n              private dialog: MatDialog) { }\n\n\n  ngOnInit(): void {\n\n    //Get the user and user profile info from localstorage\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.profile = JSON.parse(localStorage.getItem('userProfile'));\n\n    this.username = this.user.displayName;\n    this.bio = this.profile.userInfo.bio;\n\n    this.getUserNotebooks();\n  }\n\n  //Get the logged in user's notebooks\n  getUserNotebooks(){\n\n    this.notebookService.getUserNotebooks(this.user.uid)\n      .subscribe(result => {\n\n        let children = [{name: 'Notebook one', id: ''}];\n        // for (let i = 0; i localStorage.getItem('user'));\n\n    //Call the getUserDetails from the profile service to get the users profile information that match that uid\n    this.profileService.getUserDetails(user.uid).subscribe(data => {\n\n       //Open dialog and populate the data attributes of the form fields\n        const dialogRef = this.dialog.open(EditProfileComponent, {\n          width: '50%',\n          data: {\n            bio: data.userInfo.bio,\n            department: data.userInfo.department,\n            name: data.userInfo.name,\n            institution: data.userInfo.institution,\n            program: data.userInfo.program,\n            workstatus: data.userInfo.workStatus\n          }\n        });\n\n        //Get info and create notebook after dialog is closed\n        dialogRef.afterClosed().subscribe(result => {\n\n          //update the user profile information based on the entered values in the form\n          this.profileService.updateUser(user.uid, result.name, result.institution, result.department, result.program, result.workstatus, result.bio).subscribe(data => {\n            },\n            err => {\n              console.log(\"Error: \"+err.error.message);\n            }\n          );\n\n        });\n\n      },\n      err => {\n        console.log(\"Error: \"+err.error.message);\n      }\n    );\n\n  }\n}\n\n\n/**\n * Tree structure\n */\n interface DirectoryNode {\n  name: string;\n  id: string;\n  children?: DirectoryNode[];\n}\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  id: string;\n  level: number;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FolderPanelComponent.html":{"url":"components/FolderPanelComponent.html","title":"component - FolderPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FolderPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/panels/folder-panel/folder-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-folder-panel\n            \n\n            \n                styleUrls\n                ./folder-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./folder-panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _transformer\n                            \n                            \n                                bio\n                            \n                            \n                                dataSource\n                            \n                            \n                                department\n                            \n                            \n                                hasChild\n                            \n                            \n                                institution\n                            \n                            \n                                name\n                            \n                            \n                                open\n                            \n                            \n                                panelOpenState\n                            \n                            \n                                profile\n                            \n                            \n                                program\n                            \n                            \n                                treeControl\n                            \n                            \n                                treeFlattener\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                            \n                                width\n                            \n                            \n                                workstatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserNotebooks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openedCloseToggle\n                            \n                            \n                                openNotebookPanel\n                            \n                            \n                                openTree\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(panel: NotesPanelComponent, notebookService: NotebookService, router: Router, profileService: ProfileService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        panel\n                                                  \n                                                        \n                                                                        NotesPanelComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notebookService\n                                                  \n                                                        \n                                                                        NotebookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserNotebooks\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserNotebooks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openedCloseToggle\n                        \n                        \n                    \n                \n            \n            \n                \nopenedCloseToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openNotebookPanel\n                        \n                        \n                    \n                \n            \n            \n                \nopenNotebookPanel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openTree\n                        \n                        \n                    \n                \n            \n            \n                \nopenTree()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \nupdateProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _transformer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bio\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTreeFlatDataSource(this.treeControl, this.treeFlattener)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            department\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasChild\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            institution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            panelOpenState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            program\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            treeControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FlatTreeControl(node => node.level, node => node.expandable)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            treeFlattener\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTreeFlattener(this._transformer, node => node.level, node => node.expandable, node => node.children)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 68.3\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            workstatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/folder-panel/folder-panel.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { NotesPanelComponent } from '../notes-panel/notes-panel.component';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTree, MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport { ViewEncapsulation } from '@angular/core';\nimport {NotebookService} from \"../../../services/notebook.service\";\nimport {Router} from \"@angular/router\";\nimport {ProfileService} from \"../../../services/profile.service\";\nimport {MatSidenav} from \"@angular/material/sidenav\";\nimport {EditProfileComponent} from \"../../../notebook/edit-profile/edit-profile.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-folder-panel',\n  templateUrl: './folder-panel.component.html',\n  styleUrls: ['./folder-panel.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class FolderPanelComponent implements OnInit {\n\n  user: any;\n  profile: any;\n  open: boolean = false;\n\n  username: string = '';\n  bio: string = '';\n  institution: string = '';\n  department: string = '';\n  name: string = '';\n  program: string = '';\n  workstatus: string = '';\n\n  panelOpenState = false;\n  width = 68.3;\n\n  //-----------------  Code needed for the tree  ----------------------------------\n  private _transformer = (node: DirectoryNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      id: node.id,\n      level: level,\n    };\n  }\n\n  //Variables needed for the tree view\n  treeControl = new FlatTreeControl(node => node.level, node => node.expandable);\n  treeFlattener = new MatTreeFlattener(this._transformer, node => node.level, node => node.expandable, node => node.children);\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  //--------------------------------------------------------------------------------\n\n\n  constructor(private panel: NotesPanelComponent, private notebookService: NotebookService,\n              private router: Router, private profileService: ProfileService,\n              private dialog: MatDialog) { }\n\n\n  ngOnInit(): void {\n\n    //Get the user and user profile info from localstorage\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.profile = JSON.parse(localStorage.getItem('userProfile'));\n\n    this.username = this.user.displayName;\n    this.bio = this.profile.userInfo.bio;\n\n    this.getUserNotebooks();\n  }\n\n  //Get the logged in user's notebooks\n  getUserNotebooks(){\n\n    this.notebookService.getUserNotebooks(this.user.uid)\n      .subscribe(result => {\n\n        let children = [{name: 'Notebook one', id: ''}];\n        // for (let i = 0; i localStorage.getItem('user'));\n\n    //Call the getUserDetails from the profile service to get the users profile information that match that uid\n    this.profileService.getUserDetails(user.uid).subscribe(data => {\n\n       //Open dialog and populate the data attributes of the form fields\n        const dialogRef = this.dialog.open(EditProfileComponent, {\n          width: '50%',\n          data: {\n            bio: data.userInfo.bio,\n            department: data.userInfo.department,\n            name: data.userInfo.name,\n            institution: data.userInfo.institution,\n            program: data.userInfo.program,\n            workstatus: data.userInfo.workStatus\n          }\n        });\n\n        //Get info and create notebook after dialog is closed\n        dialogRef.afterClosed().subscribe(result => {\n\n          //update the user profile information based on the entered values in the form\n          this.profileService.updateUser(user.uid, result.name, result.institution, result.department, result.program, result.workstatus, result.bio).subscribe(data => {\n            },\n            err => {\n              console.log(\"Error: \"+err.error.message);\n            }\n          );\n\n        });\n\n      },\n      err => {\n        console.log(\"Error: \"+err.error.message);\n      }\n    );\n\n  }\n}\n\n\n/**\n * Tree structure\n */\n interface DirectoryNode {\n  name: string;\n  id: string;\n  children?: DirectoryNode[];\n}\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  id: string;\n  level: number;\n}\n\n\n    \n\n    \n        \n  \n    \n      \n        \n          keyboard_arrow_left\n        \n\n        \n          \n          {{username}}\n          {{bio}}\n        \n      \n      \n        \n          \n            {{node.name}}\n          \n        \n        \n          \n            \n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n            \n          \n          {{node.name}}\n        \n      \n    \n\n  \n\n\n\n  \n    sidenav.toggle() -->\n    \n      keyboard_arrow_right\n    \n\n  \n\n\n    \n\n    \n                \n                    ./folder-panel.component.scss\n                \n                #openPanelBtn{\n  position: absolute;\n  top: 12px;\n  right: 0px;\n  transition: all .1s linear;\n  z-index: 3;\n  font-size: larger;\n}\n\n#closePanelBtn{\n    position: absolute;\n    top: 12px;\n    right: 0px;\n}\n\n#panel{\n  width: 100%;\n  height: 90vh;\n  position: fixed;\n  border: 2px solid black;\n  transition: all .1s linear;\n  border-radius: 3px;\n  overflow: hidden;\n}\n\n:host{\n  width: 100%;\n  height: 90vh;\n  // position: fixed;\n}\n\n#panelContent{\n  // border: 2px solid black;\n  // height: 99vh;\n  width: 100%;\n  // margin-left: 39px;\n  // margin-top: 5vh;\n\n}\n\n.header-image {\n  background-image: url(\"../../../../assets/images/defaultProfile.jpg\");\n  background-size: cover;\n}\n\n#card{\n  width: 100%;\n  padding-bottom: 0;\n  // box-shadow: none !important;\n  transition: all .1s linear;\n  padding-bottom: -20px;\n}\n\n#username{\n  font-size: medium;\n}\n\n#subTitle{\n  font-size: small;\n}\n\n.content{\n  width: 40px !important;\n}\n\n.mat-drawer-backdrop{\n  display: none !important;\n}\n\n::ng-deep mat-sidenav{\n  width: 100% !important;\n}\n// .treeNode{\n//   padding-left: 0px !important;\n// }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              keyboard_arrow_left                                    {{username}}          {{bio}}                                                  {{node.name}}                                                              {{treeControl.isExpanded(node) ? \\'expand_more\\' : \\'chevron_right\\'}}                                {{node.name}}                          sidenav.toggle() -->          keyboard_arrow_right      '\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FolderPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/account/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/account/forgot-password/forgot-password.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/forgot-password/forgot-password.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        forgot-password works!\n\n    \n\n    \n                \n                    ./forgot-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'forgot-password works!'\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalConfirmComponent.html":{"url":"components/GlobalConfirmComponent.html","title":"component - GlobalConfirmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GlobalConfirmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modals/global/global-confirm/global-confirm.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-confirm\n            \n\n            \n                styleUrls\n                ./global-confirm.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./global-confirm.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Cancel\n                            \n                            \n                                Confirm\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modals/global/global-confirm/global-confirm.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Cancel\n                        \n                        \n                    \n                \n            \n            \n                \nCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/modals/global/global-confirm/global-confirm.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Confirm\n                        \n                        \n                    \n                \n            \n            \n                \nConfirm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/modals/global/global-confirm/global-confirm.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/modals/global/global-confirm/global-confirm.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject , OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n//global confirm Dialog that can be used to confirm users actions\n\n@Component({\n  selector: 'app-global-confirm',\n  templateUrl: './global-confirm.component.html',\n  styleUrls: ['./global-confirm.component.scss']\n})\nexport class GlobalConfirmComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef) { }\n\n  ngOnInit(): void {\n  }\n\n  Confirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  Cancel(): void {\n    this.dialogRef.close(false);\n  }\n\n}\n\n    \n\n    \n        Confirm\n\n  \n    Are you sure?\n  \n\n\n  No\n  Yes\n\n\n    \n\n    \n                \n                    ./global-confirm.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Confirm      Are you sure?    No  Yes'\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalConfirmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalErrorComponent.html":{"url":"components/GlobalErrorComponent.html","title":"component - GlobalErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GlobalErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/modals/global/global-error/global-error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-error\n            \n\n            \n                styleUrls\n                ./global-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./global-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/modals/global/global-error/global-error.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/modals/global/global-error/global-error.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.data.error\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/modals/global/global-error/global-error.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject , OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n//Global error modal that can be used to show global error messages\n\n@Component({\n  selector: 'app-global-error',\n  templateUrl: './global-error.component.html',\n  styleUrls: ['./global-error.component.scss']\n})\nexport class GlobalErrorComponent implements OnInit {\n\n  message = this.data.error;\n  constructor(@Inject(MAT_DIALOG_DATA) private data: {error: any}) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Error\n{{message}}\n\n    \n\n    \n                \n                    ./global-error.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Error{{message}}'\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/account/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                form\n                            \n                            \n                                loginFailed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, route: ActivatedRoute, router: Router, accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/account/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/login/login.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/login/login.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/login/login.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/login/login.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginFailed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/login/login.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../../../services/account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  loginFailed = false;\n  errorMessage: string = \"\";\n\n  constructor( private fb: FormBuilder, private route: ActivatedRoute, private router: Router, private accountService: AccountService)\n  {\n    //setup the form and validation\n    this.form = this.fb.group({\n      email: ['', Validators.email],\n      password: ['', Validators.required]\n    });\n  }\n\n  async ngOnInit(): Promise\n  {\n    //if user is already logged in move them to the notebook page, if not return to login\n    await this.accountService.isUserLoggedIn();\n    //add image background to body\n    document.body.className = \"backgroundIMG\";\n  }\n\n  ngOnDestroy(){\n    //Remove image background to body\n    document.body.className=\"\";\n  }\n\n  //When user submits Login form\n  async onSubmit(): Promise\n  {\n    this.loginFailed = false;\n\n    //check if form is valid\n    if (this.form.valid)\n    {\n        const email = this.form.get('email')?.value;\n        const password = this.form.get('password')?.value;\n\n        //Call the account service to login the user with Firebase\n        this.accountService.loginUser(email, password).subscribe(data => {\n          this.loginFailed = false;\n          //If login was successful then go to the notebook home page\n            this.router.navigateByUrl(`notebook`);\n          },\n          err => {\n            this.loginFailed = true;\n            this.errorMessage = \"Error: \"+err.error.message;\n          }\n        );\n    }\n    else\n    {\n      return;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    Smart Student Handbook\n  \n\n\n\n  \n    \n      Log In\n      \n        {{ errorMessage }}\n      \n      \n        \n        \n          Please provide a valid email address\n        \n      \n      \n        \n        \n          Please provide a valid password\n        \n      \n      Login\n    \n  \n\n  Dont have an Account? Register\nForgot Password?-->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                mat-card {\n  max-width: 400px;\n  margin: 2em auto;\n  text-align: center;\n  background-color: rgba(255,255,255,0.8);\n\n}\n\nmat-form-field {\n  display: block;\n}\n\n.transparent{\n  background-color: rgba(255, 255, 255, 0.8);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Smart Student Handbook              Log In              {{ errorMessage }}                                      Please provide a valid email address                                              Please provide a valid password                    Login        Dont have an Account? RegisterForgot Password?-->'\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material/material/material.module.ts\n        \n\n\n        \n            Description\n        \n        \n            NgModule that includes all Material modules. This helps you avoid importing material modules every time you\nwant to make use of one. this module should be injected into your app.module.ts file in order to work properly.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        \n//Simple module to bundle all the Angular Material imports as to reduce clutter in the app.module.ts\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatCommonModule} from '@angular/material/core';\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\n\n/**\n * NgModule that includes all Material modules. This helps you avoid importing material modules every time you\n * want to make use of one. this module should be injected into your app.module.ts file in order to work properly.\n*/\n@NgModule({\n  exports: [\n    // CDK\n    LayoutModule,\n    A11yModule,\n    BidiModule,\n    ObserversModule,\n    OverlayModule,\n    PlatformModule,\n    PortalModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n\n    // Material\n    MatTreeModule,\n    MatCommonModule,\n    BrowserModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule\n  ]\n})\n\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagingService.html":{"url":"injectables/MessagingService.html","title":"injectable - MessagingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessagingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/messaging.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentMessage\n                            \n                            \n                                messaging\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                receiveMessage\n                            \n                            \n                                requestPermission\n                            \n                            \n                                subscribeToTopic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(angularFireMessaging: AngularFireMessaging, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/messaging.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        angularFireMessaging\n                                                  \n                                                        \n                                                                    AngularFireMessaging\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            receiveMessage\n                        \n                        \n                    \n                \n            \n            \n                \nreceiveMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/messaging.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestPermission\n                        \n                        \n                    \n                \n            \n            \n                \nrequestPermission()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/messaging.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribeToTopic\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribeToTopic(currentToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/messaging.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/messaging.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messaging\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/services/messaging.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireMessaging } from '@angular/fire/messaging';\nimport { BehaviorSubject } from 'rxjs'\nimport firebase from \"firebase\";\nimport {environment} from \"../../environments/environment\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class MessagingService {\n  currentMessage = new BehaviorSubject(null);\n  messaging;\n  constructor(private angularFireMessaging: AngularFireMessaging, private httpClient: HttpClient) {\n\n    firebase.initializeApp(environment.firebase);\n\n    this.messaging = firebase.messaging();\n\n    this.messaging.getToken({vapidKey: \"BDK2FLOOnbVACZrKC1Riy2a9vYLIKUJDwPHbMHOxzV3ZtNqlNE1faNKSU190PEQ-ef8ZvB_5aDjtfGDNguvoyXo\"})\n      .then((currentToken) => {\n        if (currentToken) {\n          // Send the token to your server and update the UI if necessary\n          console.log(currentToken);\n          this.messaging.onMessage = this.messaging.onMessage.bind(this.messaging);\n          this.messaging.onTokenRefresh = this.messaging.onTokenRefresh.bind(this.messaging);\n\n          this.subscribeToTopic(currentToken)\n            .subscribe(res => {\n              // console.log(res);\n            })\n        } else {\n          // Show permission request UI\n          console.log('No registration token available. Request permission to generate one.');\n        }\n      }).catch((err) => {\n      console.log('An error occurred while retrieving token. ', err);\n    });\n\n\n    // this.angularFireMessaging.messaging.subscribe(\n    //   (_messaging) => {\n    //     _messaging.onMessage = _messaging.onMessage.bind(_messaging);\n    //     _messaging.onTokenRefresh = _messaging.onTokenRefresh.bind(_messaging);\n    //   }\n    // )\n  }\n\n  requestPermission() {\n    this.messaging.requestPermission();\n\n    // this.angularFireMessaging.requestToken.subscribe(\n    //   (token) => {\n    //     console.log(token);\n    //   },\n    //   (err) => {\n    //     console.error('Unable to get permission to notify.', err);\n    //   }\n    // );\n  }\n\n  receiveMessage() {\n    // this.messaging.onMessage = this.messaging.onMessage.bind(this.messaging);\n    // this.messaging.onMessage((payload) => {\n    //   console.log(payload);\n    //   this.currentMessage.next(payload);\n    // });\n\n\n    // this.angularFireMessaging.messages.subscribe(\n    //   (payload: any) => {\n    //     console.log(\"new message received. \", payload);\n    //     this.currentMessage.next(payload);\n    //   })\n  }\n\n  subscribeToTopic(currentToken: string){\n    return this.httpClient.request('post','http://localhost:5001/notification/subscribeToTopic', {\n      body: {\n        token: currentToken,\n        topic: 'general'\n      }\n    } );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotebookDto.html":{"url":"classes/NotebookDto.html","title":"class - NotebookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotebookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notebook.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                author\n                            \n                            \n                                    Readonly\n                                    Optional\n                                course\n                            \n                            \n                                    Readonly\n                                    Optional\n                                description\n                            \n                            \n                                    Readonly\n                                    Optional\n                                institution\n                            \n                            \n                                    Readonly\n                                    Optional\n                                name\n                            \n                            \n                                    Readonly\n                                    Optional\n                                private\n                            \n                            \n                                    Readonly\n                                    Optional\n                                surname\n                            \n                            \n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notebook.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notebook.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notebook.service.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            institution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notebook.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notebook.service.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notebook.service.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            surname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notebook.service.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notebook.service.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotebookService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getUserNotebooks(userId: string): Observable{\n\n    return this.httpClient.request('get','http://localhost:5001/notebook/findAllUserNotebooks/');\n  }\n\n  getNoteBookById(noteBookId: string): Observable{\n\n    return this.httpClient.request('get','http://localhost:5001/notebook/findNotebookById/' + noteBookId);\n  }\n\n  createNotebook(notebookDto: NotebookDto){\n\n    return this.httpClient.request('post','http://localhost:5001/notebook/createNotebook/', {\n      body: notebookDto\n    });\n\n  }\n\n  updateNotebook(notebookDto: NotebookDto, Id: string){\n    return this.httpClient.request('put','http://localhost:5001/notebook/updateNotebook/' + Id, {\n      body: notebookDto,\n\n    });\n  }\n\n  removeNotebook(noteBookId: string){\n\n    return this.httpClient.request('delete','http://localhost:5001/notebook/deleteNotebook/' + noteBookId);\n  }\n}\n\nclass NotebookDto {\n  readonly author?: string\n  readonly course?: string\n  readonly description?: string\n  readonly institution?: string\n  readonly name?: string\n  readonly surname?: string\n  readonly private?: boolean\n  readonly username?: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotebookService.html":{"url":"injectables/NotebookService.html","title":"injectable - NotebookService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotebookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notebook.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNotebook\n                            \n                            \n                                getNoteBookById\n                            \n                            \n                                getUserNotebooks\n                            \n                            \n                                removeNotebook\n                            \n                            \n                                updateNotebook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notebook.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNotebook\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNotebook(notebookDto: NotebookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notebook.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notebookDto\n                                    \n                                                NotebookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteBookById\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteBookById(noteBookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notebook.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    noteBookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserNotebooks\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserNotebooks(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notebook.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeNotebook\n                        \n                        \n                    \n                \n            \n            \n                \nremoveNotebook(noteBookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notebook.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    noteBookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateNotebook\n                        \n                        \n                    \n                \n            \n            \n                \nupdateNotebook(notebookDto: NotebookDto, Id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notebook.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notebookDto\n                                    \n                                                NotebookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotebookService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getUserNotebooks(userId: string): Observable{\n\n    return this.httpClient.request('get','http://localhost:5001/notebook/findAllUserNotebooks/');\n  }\n\n  getNoteBookById(noteBookId: string): Observable{\n\n    return this.httpClient.request('get','http://localhost:5001/notebook/findNotebookById/' + noteBookId);\n  }\n\n  createNotebook(notebookDto: NotebookDto){\n\n    return this.httpClient.request('post','http://localhost:5001/notebook/createNotebook/', {\n      body: notebookDto\n    });\n\n  }\n\n  updateNotebook(notebookDto: NotebookDto, Id: string){\n    return this.httpClient.request('put','http://localhost:5001/notebook/updateNotebook/' + Id, {\n      body: notebookDto,\n\n    });\n  }\n\n  removeNotebook(noteBookId: string){\n\n    return this.httpClient.request('delete','http://localhost:5001/notebook/deleteNotebook/' + noteBookId);\n  }\n}\n\nclass NotebookDto {\n  readonly author?: string\n  readonly course?: string\n  readonly description?: string\n  readonly institution?: string\n  readonly name?: string\n  readonly surname?: string\n  readonly private?: boolean\n  readonly username?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotesPanelComponent.html":{"url":"components/NotesPanelComponent.html","title":"component - NotesPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotesPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/panels/notes-panel/notes-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notes-panel\n            \n\n            \n                styleUrls\n                ./notes-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notes-panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeNotePanelBtn\n                            \n                            \n                                course\n                            \n                            \n                                description\n                            \n                            \n                                institution\n                            \n                            \n                                    Public\n                                notebooks\n                            \n                            \n                                open\n                            \n                            \n                                private\n                            \n                            \n                                sidenav\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editNotebook\n                            \n                            \n                                getUserNotebooks\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Public\n                                openedCloseToggle\n                            \n                            \n                                openNotebook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notebookService: NotebookService, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notebookService\n                                                  \n                                                        \n                                                                        NotebookService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editNotebook\n                        \n                        \n                    \n                \n            \n            \n                \neditNotebook(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserNotebooks\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserNotebooks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openedCloseToggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openedCloseToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openNotebook\n                        \n                        \n                    \n                \n            \n            \n                \nopenNotebook(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeNotePanelBtn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            institution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notebooks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('sidenav')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/panels/notes-panel/notes-panel.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, OnInit, ViewChild } from '@angular/core';\nimport {MatSidenav, MatSidenavModule} from '@angular/material/sidenav';\nimport {NotebookService} from \"../../../services/notebook.service\";\nimport {Router} from \"@angular/router\";\nimport {AddNotebookComponent} from \"../../../notebook/add-notebook/add-notebook.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-notes-panel',\n  templateUrl: './notes-panel.component.html',\n  styleUrls: ['./notes-panel.component.scss']\n})\n\n@Injectable()\nexport class NotesPanelComponent implements OnInit {\n\n  //Variables for add notebook popup dialog\n  title = '';\n  course = '';\n  description = '';\n  institution = '';\n  private = false;\n\n  //sliding panel\n  @ViewChild('sidenav') sidenav!: MatSidenav;\n\n  public closeNotePanelBtn: any;\n\n  open = false;\n\n  public notebooks: any = [];\n\n  constructor(private notebookService: NotebookService, private router: Router, private dialog: MatDialog) { }\n\n  async ngOnInit() {\n\n    this.getUserNotebooks();\n  }\n\n  getUserNotebooks(){\n    this.notebooks = [];\n\n    this.notebookService.getUserNotebooks('zsm6CotjuAVMUynICGD5QCiQNGl2')\n      .subscribe(result => {\n\n        for(let i = 0; i  {\n      console.log(result);\n\n      this.title  = result.title;\n      this.course  = result.course;\n      this.description = result.description;\n      this.institution = result.institution;\n      this.private  = result.private ;\n\n      //Open dialog\n      const dialogRef = this.dialog.open(AddNotebookComponent, {\n        width: '50%',\n        data: {\n          title: this.title,\n          course: this.course,\n          description: this.description,\n          institution: this.institution,\n          private: this.private\n        }\n      });\n\n      //Get info and create notebook after dialog is closed\n      dialogRef.afterClosed().subscribe(result => {\n\n        //If the user filled out the form\n        if (result !== undefined) {\n\n          let request = {\n            title: result.title,\n            author: 'Arno',\n            course: result.course,\n            description: result.description,\n            institution: result.institution,\n            name: 'Arno',\n            surname: 'Moller',\n            private: result.private,\n            username: 'userArno'\n          }\n\n          //Call service and create notebook\n          this.notebookService.updateNotebook(request, id)\n            .subscribe(result => {\n                console.log(result);\n                this.getUserNotebooks();\n              },\n              error => {\n                console.log(error);\n              });\n        }\n      })\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n      \n        keyboard_arrow_left\n      \n\n      \n        Notes\n      \n\n\n      \n        \n          edit\n        \n\n        \n          \n\n            JUNE 17 2021\n            {{notebook.title}}\n\n            {{notebook.description}}\n\n          \n\n          \n            Demo\n          \n        \n\n      \n\n-->\n-->\nJUNE 3 2021-->\nCapstone Demo 1-->\n\nThe SRS document of Algorithmic Aces for demo 1 of capstone project-->\n\n-->\n\n-->\nSRS-->\nDemo-->\n-->\n-->\n    \n\n  \n\n\n\n  \n    sidenav.toggle() -->\n    \n      keyboard_arrow_right\n    \n\n  \n\n\n    \n\n    \n                \n                    ./notes-panel.component.scss\n                \n                #openPanelBtn{\n  position: absolute;\n  top: 12px;\n  right: 0px;\n  transition: all .1s linear;\n  z-index: 3;\n  font-size: larger;\n}\n\n#closeNotePanelBtn{\n  position: relative;\n  margin-bottom: 20px;\n}\n\n#panel{\n  width: 100%;\n  height: 90vh;\n  position: fixed;\n  border: 2px solid black;\n  transition: all .1s linear;\n  border-radius: 3px;\n  overflow: hidden;\n}\n\n:host{\n  width: 100%;\n  height: 90vh;\n  // position: fixed;\n}\n\n#panelContent{\n  // border: 2px solid black;\n  // height: 99vh;\n  width: 100%;\n  // margin-left: 39px;\n  // margin-top: 5vh;\n\n}\n\n.header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.card{\n  width: 100%;\n  padding-bottom: 5px;\n  box-shadow: none !important;\n  transition: all .1s linear;\n  padding-left: 5px;\n  overflow: hidden;\n  margin-top: 15px !important;\n  cursor: pointer;\n}\n\n#username{\n  font-size: medium;\n  width: 100%;\n  display: block;\n  margin-top: -15px;\n  margin-bottom: 10px;\n}\n\n#subTitle{\n  font-size: small;\n  display: block;\n}\n\n#description{\n  font-weight: 400;\n  font-size: small;\n}\n\n.content{\n  width: 40px !important;\n}\n\n.mat-drawer-backdrop{\n  display: none !important;\n}\n\n::ng-deep mat-sidenav{\n  width: 100% !important;\n}\n// .treeNode{\n//   padding-left: 0px !important;\n// }\n\n.editNotebookIcon{\n  font-size: medium;\n}\n\n.editNotebookBtn{\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    keyboard_arrow_left                    Notes                              edit                                      JUNE 17 2021            {{notebook.title}}            {{notebook.description}}                                Demo                        -->-->JUNE 3 2021-->Capstone Demo 1-->The SRS document of Algorithmic Aces for demo 1 of capstone project-->-->-->SRS-->Demo-->-->-->            sidenav.toggle() -->          keyboard_arrow_right      '\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotesPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                getUserDetails\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/profile.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUser\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUser(uid: string, name?: string, institution?: string, department?: string, program?: string, workStatus?: string, bio?: string, dateJoined?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/profile.service.ts:40\n                \n            \n\n\n            \n                \n                    Send a API request to the backend profile endPoint to create a new user profile\nUser only has to enter information that they want to, its not required\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrequired parameter\n\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    institution\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    department\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    program\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    workStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    bio\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    dateJoined\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional -  Must be in the correct format json object dateJoined:{\"_seconds\",1,\"_nanoseconds\":1}\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserDetails(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/profile.service.ts:24\n                \n            \n\n\n            \n                \n                    Send a API request to the backend profile endPoint to get a users profile information\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser(uid: string, name?: string, institution?: string, department?: string, program?: string, workStatus?: string, bio?: string, dateJoined?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/profile.service.ts:65\n                \n            \n\n\n            \n                \n                    Send a API request to the backend profile endPoint to update a user profile\nUser only has to enter information that they want to, its not required\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    uid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nrequired parameter\n\n\n                                    \n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    institution\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    department\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    program\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    workStatus\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    bio\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional\n\n\n                                    \n                                \n                                \n                                    dateJoined\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \noptional -  Must be in the correct format json object dateJoined:{\"_seconds\",1,\"_nanoseconds\":1}\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n//API URL for the account endpoint on the backend\nconst PROFILE_API = 'http://localhost:5001/user/';\n//Shared header options for API request\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  /**\n   * Send a API request to the backend profile endPoint to get a users profile information\n   * @param userId\n   */\n  getUserDetails(userId: string): Observable {\n    return this.http.get(PROFILE_API + 'getUserDetails/'+userId, { headers: {'Content-Type':'application/json'}, responseType: 'json' });\n  }\n\n  /**\n   * Send a API request to the backend profile endPoint to create a new user profile\n   * User only has to enter information that they want to, its not required\n   * @param uid - required parameter\n   * @param name - optional\n   * @param institution - optional\n   * @param department - optional\n   * @param program - optional\n   * @param workStatus - optional\n   * @param bio - optional\n   * @param dateJoined - optional -  Must be in the correct format json object dateJoined:{\"_seconds\",1,\"_nanoseconds\":1}\n   */\n  createUser(uid: string, name?: string, institution?: string, department?:string, program?:string, workStatus?:string, bio?:string, dateJoined?:string ): Observable {\n    return this.http.post(PROFILE_API + 'createUser', {\n      uid,\n      name,\n      institution,\n      department,\n      program,\n      workStatus,\n      bio,\n      dateJoined,\n    }, httpOptions);\n  }\n\n  /**\n   * Send a API request to the backend profile endPoint to update a user profile\n   * User only has to enter information that they want to, its not required\n   * @param uid - required parameter\n   * @param name - optional\n   * @param institution - optional\n   * @param department - optional\n   * @param program - optional\n   * @param workStatus - optional\n   * @param bio - optional\n   * @param dateJoined - optional -  Must be in the correct format json object dateJoined:{\"_seconds\",1,\"_nanoseconds\":1}\n   */\n  updateUser(uid: string, name?: string, institution?: string, department?:string, program?:string, workStatus?:string, bio?:string, dateJoined?:string ): Observable {\n    return this.http.post(PROFILE_API + 'updateUser', {\n      uid,\n      name,\n      institution,\n      department,\n      program,\n      workStatus,\n      bio,\n      dateJoined,\n    }, httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/account/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                form\n                            \n                            \n                                registerFailed\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, route: ActivatedRoute, router: Router, accountService: AccountService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/account/register/register.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/register/register.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/register/register.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/register/register.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/register/register.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/register/register.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerFailed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/register/register.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/account/register/register.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AccountService } from '../../../services/account.service';\nimport { ProfileService } from '../../../services/profile.service';\nimport { MustMatch } from './must-match.validator';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  form: FormGroup;\n  registerFailed = false;\n  submitted = false;\n  errorMessage: string = \"\";\n\n  constructor( private fb: FormBuilder, private route: ActivatedRoute, private router: Router, private accountService: AccountService, private profileService: ProfileService)\n  {\n    //setup the form and validation\n    this.form = this.fb.group({\n      email: ['', Validators.email],\n      phoneNumber: ['', Validators.required],\n      displayName: ['', Validators.required],\n      password: ['', Validators.required],\n      passwordConfirm: ['', Validators.required]\n    }, {\n      validator: MustMatch('password', 'passwordConfirm')\n    });\n  }\n\n  async ngOnInit(): Promise\n  {\n    //if user is already logged in move them to the notebook page, if not return to login\n    await this.accountService.isUserLoggedIn();\n    //add image background to body\n    document.body.className = \"backgroundIMG\";\n  }\n\n  ngOnDestroy(){\n    //Remove image background to body\n    document.body.className=\"\";\n  }\n\n  //When user submits Register form\n  async onSubmit(): Promise\n  {\n    this.registerFailed = false;\n    this.submitted = true;\n\n    //check if form is valid\n    if (this.form.valid)\n    {\n      const email = this.form.get('email')?.value;\n      const phoneNumber = \"+27\"+this.form.get('phoneNumber')?.value;\n      const displayName = this.form.get('displayName')?.value;\n      const password = this.form.get('password')?.value;\n      const passwordConfirm = this.form.get('passwordConfirm')?.value;\n\n      //Call account service to register a new Account\n      this.accountService.registerUser(email,phoneNumber,displayName,password,passwordConfirm).subscribe(data => {\n\n        //let dateJoined = '{\"_seconds\":'+Date.now().toString()+', \"_nanoseconds\":0}';\n          //If RegisterUser was successful create a new user profile with default values\n        this.profileService.createUser(data.uid,data.displayName, \"\" ,\"\" ,\"\" , \"\",\"\" ,Date.now().toString()).subscribe(resp =>{\n\n          //If createUser was successful then login the user and take them to the notebook page\n            this.accountService.loginUser(email, password).subscribe(data => {\n                this.registerFailed = false;\n                this.router.navigateByUrl(`notebook`);\n              },\n              err => {\n                this.registerFailed = true;\n                this.errorMessage = \"Error: \"+err.error.message;\n              }\n            );\n\n          },\n          err => {\n            this.registerFailed = true;\n            this.errorMessage = \"Error: \"+err.error.message;\n          });\n\n        },\n        err => {\n          this.registerFailed = true;\n          this.errorMessage = \"Error: \"+err.error.message;\n        }\n      );\n    }\n    else\n    {\n      return;\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    Smart Student Handbook\n  \n\n\n\n  \n    \n      Register\n      \n        {{ errorMessage }}\n      \n\n      \n        \n        \n          Please provide a valid email address\n        \n      \n\n      \n        Telephone\n        +27 &nbsp;\n        \n        \n          Please provide a valid phoneNumber\n        \n      \n\n\n      \n        \n        \n          Please provide a valid displayName\n        \n      \n\n      \n        \n        \n          Please provide a valid password\n        \n      \n\n      \n        \n        \n          Passwords dont match\n        \n        Confirm your password (must match)-->\n      \n\n      Register\n\n    \n  \n\n  I already have an Account? Login\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                mat-card {\n  max-width: 400px;\n  margin: 2em auto;\n  text-align: center;\n  background-color: rgba(255,255,255,0.8);\n\n}\n\nmat-form-field {\n  display: block;\n}\n\n.transparent{\n  background-color: rgba(255, 255, 255, 0.8);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Smart Student Handbook              Register              {{ errorMessage }}                                      Please provide a valid email address                            Telephone        +27                            Please provide a valid phoneNumber                                              Please provide a valid displayName                                              Please provide a valid password                                              Passwords dont match                Confirm your password (must match)-->            Register        I already have an Account? Login'\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestPasswordComponent.html":{"url":"components/RestPasswordComponent.html","title":"component - RestPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RestPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/account/reset-password/rest-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rest-password\n            \n\n            \n                styleUrls\n                ./rest-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rest-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/account/reset-password/rest-password.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/account/reset-password/rest-password.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rest-password',\n  templateUrl: './rest-password.component.html',\n  styleUrls: ['./rest-password.component.scss']\n})\nexport class RestPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        rest-password works!\n\n    \n\n    \n                \n                    ./rest-password.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'rest-password works!'\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RestPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SmartAssistPanelComponent.html":{"url":"components/SmartAssistPanelComponent.html","title":"component - SmartAssistPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SmartAssistPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/panels/smart-assist-panel/smart-assist-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-smart-assist-panel\n            \n\n            \n                styleUrls\n                ./smart-assist-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./smart-assist-panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openedCloseToggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/panels/smart-assist-panel/smart-assist-panel.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/smart-assist-panel/smart-assist-panel.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openedCloseToggle\n                        \n                        \n                    \n                \n            \n            \n                \nopenedCloseToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/panels/smart-assist-panel/smart-assist-panel.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-smart-assist-panel',\n  templateUrl: './smart-assist-panel.component.html',\n  styleUrls: ['./smart-assist-panel.component.scss']\n})\nexport class SmartAssistPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  openedCloseToggle(){\n    const sideNav = document.getElementById('smartAssistContainer') as HTMLElement;\n    const col = sideNav?.parentElement?.parentElement;\n\n    if(sideNav.style.width === '100%')\n    {\n      sideNav.style.width = '40px';\n\n      if(col){\n        col.style.width = 'fit-content';\n      }\n\n    }\n    else{\n      sideNav.style.width = '100%';\n\n      if(col){\n        col.style.width = '25%';\n      }\n    }\n\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            keyboard_arrow_right\n          \n\n          Smart Assist\n        \n      \n\n      \n        \n          JUNE 3 2021\n          Functional Requirements\n\n          R1:The system should allow users to manage their Profile and Account.\n          R2:The system should allow users to create notes and add content to it then add appropriate tags totheir content.\n\n        \n\n        \n          SRS\n        \n      \n\n      \n        \n          JUNE 3 2021\n          Domain Model\n        \n\n        \n\n        \n          SRS\n        \n      \n\n    \n\n  \n\n\n\n  \n    sidenav.toggle() -->\n    \n      keyboard_arrow_left\n    \n\n  \n\n\n    \n\n    \n                \n                    ./smart-assist-panel.component.scss\n                \n                #openPanelBtn{\n  position: absolute;\n  top: 12px;\n  right: 0px;\n  // transition: all .15s linear;\n  z-index: 3;\n  font-size: larger;\n}\n\n#closePanelBtn{\n  position: absolute;\n  top: 4px;\n  left: 0px;\n}\n\n#panel{\n  width: 100%;\n  height: 90vh;\n  position: fixed;\n  border: 2px solid black;\n  transition: all .1s linear;\n  border-radius: 3px;\n  overflow: hidden;\n}\n\n:host{\n  width: 100%;\n  height: 90vh;\n  // position: fixed;\n}\n\n#panelContent{\n  // border: 2px solid black;\n  // height: 99vh;\n  width: 100%;\n  // margin-left: 39px;\n  // margin-top: 5vh;\n\n}\n\n.header-image {\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\n  background-size: cover;\n}\n\n.card{\n  width: 100%;\n  padding-bottom: 5px;\n  box-shadow: none !important;\n  transition: all .1s linear;\n  margin-bottom: 5px;\n}\n\n#username{\n  font-size: medium;\n}\n\n#subTitle{\n  font-size: small;\n}\n\n#description{\n  font-weight: 400;\n  font-size: small;\n}\n\n.content{\n  width: 40px !important;\n}\n\n.mat-drawer-backdrop{\n  display: none !important;\n}\n\n::ng-deep mat-sidenav{\n  width: 100% !important;\n}\n// .treeNode{\n//   padding-left: 0px !important;\n// }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          keyboard_arrow_right                    Smart Assist                                      JUNE 3 2021          Functional Requirements          R1:The system should allow users to manage their Profile and Account.          R2:The system should allow users to create notes and add content to it then add appropriate tags totheir content.                          SRS                                      JUNE 3 2021          Domain Model                                  SRS                          sidenav.toggle() -->          keyboard_arrow_left      '\n    var COMPONENTS = [{'name': 'AddNotebookComponent', 'selector': 'app-add-notebook'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmDeleteComponent', 'selector': 'app-confirm-delete'},{'name': 'EditProfileComponent', 'selector': 'app-edit-profile'},{'name': 'FolderPanelComponent', 'selector': 'app-folder-panel'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GlobalConfirmComponent', 'selector': 'app-global-confirm'},{'name': 'GlobalErrorComponent', 'selector': 'app-global-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotebookComponent', 'selector': 'app-notebook'},{'name': 'NotesPanelComponent', 'selector': 'app-notes-panel'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RestPasswordComponent', 'selector': 'app-rest-password'},{'name': 'SmartAssistPanelComponent', 'selector': 'app-smart-assist-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SmartAssistPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bio\n                                \n                                \n                                        dateJoined\n                                \n                                \n                                            Optional\n                                        department\n                                \n                                \n                                            Optional\n                                        institution\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        program\n                                \n                                \n                                        uid\n                                \n                                \n                                            Optional\n                                        workStatus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateJoined\n                                    \n                                \n                                \n                                    \n                                        dateJoined:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        department\n                                    \n                                \n                                \n                                    \n                                        department:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        institution\n                                    \n                                \n                                \n                                    \n                                        institution:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        program\n                                    \n                                \n                                \n                                    \n                                        program:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        workStatus\n                                    \n                                \n                                \n                                    \n                                        workStatus:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  uid:string;\n  name?:string;\n  institution?:string;\n  department?:string;\n  program?:string;\n  workStatus?:string;\n  bio?:string;\n  dateJoined:string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/account/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/account/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/account/register/must-match.validator.ts\n            \n            function\n            MustMatch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/account/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/account/reset-password/rest-password.component.ts\n            \n            component\n            RestPasswordComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/modals/global/global-confirm/global-confirm.component.ts\n            \n            component\n            GlobalConfirmComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/modals/global/global-error/global-error.component.ts\n            \n            component\n            GlobalErrorComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/panels/folder-panel/folder-panel.component.ts\n            \n            component\n            FolderPanelComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/components/panels/folder-panel/folder-panel.component.ts\n            \n            interface\n            DirectoryNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/panels/folder-panel/folder-panel.component.ts\n            \n            interface\n            ExampleFlatNode\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/panels/notes-panel/notes-panel.component.ts\n            \n            component\n            NotesPanelComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/panels/notes-panel/notes-panel.component.ts\n            \n            injectable\n            NotesPanelComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/components/panels/smart-assist-panel/smart-assist-panel.component.ts\n            \n            component\n            SmartAssistPanelComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/notebook/add-notebook/add-notebook.component.ts\n            \n            component\n            AddNotebookComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/notebook/add-notebook/add-notebook.component.ts\n            \n            interface\n            DialogData\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/notebook/confirm-delete/confirm-delete.component.ts\n            \n            component\n            ConfirmDeleteComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/notebook/edit-profile/edit-profile.component.ts\n            \n            component\n            EditProfileComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/notebook/edit-profile/edit-profile.component.ts\n            \n            interface\n            EditProfileDialogData\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/notebook/notebook.component.ts\n            \n            component\n            NotebookComponent\n            \n                11 %\n                (5/45)\n            \n        \n        \n            \n                \n                src/app/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/services/account.service.ts\n            \n            variable\n            ACCOUNT_API\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/account.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/messaging.service.ts\n            \n            injectable\n            MessagingService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/notebook.service.ts\n            \n            class\n            NotebookDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/notebook.service.ts\n            \n            injectable\n            NotebookService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/profile.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/profile.service.ts\n            \n            variable\n            PROFILE_API\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.0.2\n        \n            @angular/cdk : ^12.0.2\n        \n            @angular/common : ~12.0.2\n        \n            @angular/compiler : ~12.0.2\n        \n            @angular/core : ~12.0.2\n        \n            @angular/fire : ^6.1.5\n        \n            @angular/forms : ~12.0.2\n        \n            @angular/material : ^12.0.2\n        \n            @angular/platform-browser : ~12.0.2\n        \n            @angular/platform-browser-dynamic : ~12.0.2\n        \n            @angular/router : ~12.0.2\n        \n            @editorjs/editorjs : ^2.22.0\n        \n            @editorjs/list : ^1.6.2\n        \n            @editorjs/nested-list : ^1.0.1\n        \n            @editorjs/paragraph : ^2.8.0\n        \n            @editorjs/text-variant-tune : ^1.0.1\n        \n            @editorjs/underline : ^1.0.0\n        \n            angular-bootstrap-md : ^11.1.0\n        \n            bootstrap : ^5.0.1\n        \n            editorjs-alert : ^1.0.3\n        \n            editorjs-paragraph-with-alignment : ^3.0.0\n        \n            firebase : ^8.6.8\n        \n            jquery : ^3.6.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.1.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MustMatch   (src/.../must-match.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/account/register/must-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MustMatch\n                        \n                        \n                    \n                \n            \n            \n                \nMustMatch(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAddNotebookComponent\n\nAddNotebookComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddNotebookComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmDeleteComponent\n\nConfirmDeleteComponent\n\nAppModule -->\n\nConfirmDeleteComponent->AppModule\n\n\n\n\n\nEditProfileComponent\n\nEditProfileComponent\n\nAppModule -->\n\nEditProfileComponent->AppModule\n\n\n\n\n\nFolderPanelComponent\n\nFolderPanelComponent\n\nAppModule -->\n\nFolderPanelComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nGlobalConfirmComponent\n\nGlobalConfirmComponent\n\nAppModule -->\n\nGlobalConfirmComponent->AppModule\n\n\n\n\n\nGlobalErrorComponent\n\nGlobalErrorComponent\n\nAppModule -->\n\nGlobalErrorComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNotebookComponent\n\nNotebookComponent\n\nAppModule -->\n\nNotebookComponent->AppModule\n\n\n\n\n\nNotesPanelComponent\n\nNotesPanelComponent\n\nAppModule -->\n\nNotesPanelComponent->AppModule\n\n\n\nAppModule -->\n\nNotesPanelComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRestPasswordComponent\n\nRestPasswordComponent\n\nAppModule -->\n\nRestPasswordComponent->AppModule\n\n\n\n\n\nSmartAssistPanelComponent\n\nSmartAssistPanelComponent\n\nAppModule -->\n\nSmartAssistPanelComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nMessagingService\n\nMessagingService\n\nAppModule -->\n\nMessagingService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCOUNT_API   (src/.../account.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpOptions   (src/.../account.service.ts)\n                        \n                        \n                            httpOptions   (src/.../profile.service.ts)\n                        \n                        \n                            PROFILE_API   (src/.../profile.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/account.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ACCOUNT_API\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:5001/account/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  firebase: {\n    apiKey: 'AIzaSyAFpQOCQy42NzigYd5aPH3OSpbjvADJ0o0',\n    authDomain: 'smartstudentnotebook.firebaseapp.com',\n    databaseURL: 'https://smartstudentnotebook-default-rtdb.europe-west1.firebasedatabase.app',\n    projectId: 'smartstudentnotebook',\n    storageBucket: 'smartstudentnotebook.appspot.com',\n    messagingSenderId: '254968215542',\n    appId: '1:254968215542:web:be0931c257ad1d8a60b9d7',\n    measurementId: 'G-YDRCWDT5QJ'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyAFpQOCQy42NzigYd5aPH3OSpbjvADJ0o0',\n    authDomain: 'smartstudentnotebook.firebaseapp.com',\n    databaseURL: 'https://smartstudentnotebook-default-rtdb.europe-west1.firebasedatabase.app',\n    projectId: 'smartstudentnotebook',\n    storageBucket: 'smartstudentnotebook.appspot.com',\n    messagingSenderId: '254968215542',\n    appId: '1:254968215542:web:be0931c257ad1d8a60b9d7',\n    measurementId: 'G-YDRCWDT5QJ'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/profile.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PROFILE_API\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:5001/user/'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
